;************************************************************************
;	ページの初期化
;
		;---------------------------------------
		;          |____________| 
		; 0010_5000|       (4K) | ディレクトリテーブル
		;          =            = 
		;          |____________| 
		; 0010_6000|       (4K) | ページテーブル
		;          =            = 
		;          |____________| 
		; 0010_7000|       (4K) | ページフォルト用
		;          =            = 
		;          |____________| 
		;          |            | 
;
;************************************************************************
init_page:
		;---------------------------------------
		; 【レジスタの保存】
		;---------------------------------------
		pusha

		;---------------------------------------
		; ページ変換テーブルの作成
		;---------------------------------------
		cdecl	page_set_4m, CR3_BASE			; // ページ変換テーブルの作成：タスク3用
		cdecl	page_set_4m, CR3_TASK_4			; // ページ変換テーブルの作成：タスク4用
		cdecl	page_set_4m, CR3_TASK_5			; // ページ変換テーブルの作成：タスク5用
		cdecl	page_set_4m, CR3_TASK_6			; // ページ変換テーブルの作成：タスク6用

		;---------------------------------------
		; ページテーブルの設定（不在）
		;---------------------------------------
		mov		[0x0010_6000 + 0x107 * 4], dword 0	; // 0x0010_7000をページ不在に設定

		;---------------------------------------
		; アドレス変換設定
		;---------------------------------------
		mov		[0x0020_1000 + 0x107 * 4], dword PARAM_TASK_4 + 7 ; // アドレス変換：タスク4用
		mov		[0x0020_3000 + 0x107 * 4], dword PARAM_TASK_5 + 7 ; // アドレス変換：タスク5用
		mov		[0x0020_5000 + 0x107 * 4], dword PARAM_TASK_6 + 7 ; // アドレス変換：タスク6用

		;---------------------------------------
		; 描画パラメータの設定
		;---------------------------------------
		cdecl	memcpy, PARAM_TASK_4, DRAW_PARAM.t4, rose_size	; 描画パラメータ：タスク4用
		cdecl	memcpy, PARAM_TASK_5, DRAW_PARAM.t5, rose_size	; 描画パラメータ：タスク5用
		cdecl	memcpy, PARAM_TASK_6, DRAW_PARAM.t6, rose_size	; 描画パラメータ：タスク6用

		;---------------------------------------
		; 【レジスタの復帰】
		;---------------------------------------
		popa

		ret


;************************************************************************
;	
;************************************************************************
page_set_4m:
		;---------------------------------------
		; 【スタックフレームの構築】
		;---------------------------------------
												; ------|--------
		push	ebp								; EBP+ 0| EBP（元の値）
		mov		ebp, esp						; EBP+ 4| EIP（戻り番地）
												; ------|--------
												;    + 8| ページテーブル作成位置
												; ------|--------
		;---------------------------------------
		; 【レジスタの保存】
		;---------------------------------------
		pusha

		;---------------------------------------
		; ページディレクトリの作成(P=0)
		;---------------------------------------
		cld										; // DFクリア（+方向）
		mov		edi, [ebp + 8]					; EDI = ページディレクトリの先頭;
		mov		eax, 0x00000000					; EAX = 0 ; // P = 0
		mov		ecx, 1024						; count = 1024;
		rep stosd								; whlie (count--) *dst++ = 属性;

		;---------------------------------------
		; 先頭のエントリを設定
		;---------------------------------------
		mov		eax, edi						; EAX  = EDI;   // ページディレクトリの直後
		and		eax, ~0x0000_0FFF				; EAX &= ~0FFF; // 物理アドレスの指定
		or		eax,  7							; EAX |=  7;    // RWの許可
		mov		[edi - (1024 * 4)], eax			; // 先頭のエントリを設定

		;---------------------------------------
		; ページテーブルの設定（リニア）
		;---------------------------------------
		mov		eax, 0x00000007					; // 物理アドレスの指定とRWの許可
		mov		ecx, 1024						; count = 1024;
												; do
.10L:											; {
		stosd									;   *dst++  = 属性;
		add		eax, 0x00001000					;    adr   += 0x1000;
		loop	.10L							; } while (--count);

		;---------------------------------------
		; 【レジスタの復帰】
		;---------------------------------------
		popa

		;---------------------------------------
		; 【スタックフレームの破棄】
		;---------------------------------------
		mov		esp, ebp
		pop		ebp

		ret

