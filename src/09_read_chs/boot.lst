     1                                  	;; 【マクロ】
     2                                  %include	"../include/define.s"
     1                              <1> 	BOOT_LOAD	equ		0x7C00	;ブートプログラムのロード位置
     2                              <1> 
     3                              <1> 	BOOT_SIZE	equ		(1024 * 8) ;ブートコードサイズ
     4                              <1> 	SECT_SIZE	equ		(512)	   ;セクタサイズ
     5                              <1> 	BOOT_SECT	equ		(BOOT_SIZE / SECT_SIZE) ;ブートプログラムのセクタ数
     6                              <1> 	
     7                              <1> 	
     3                                  %include	"../include/macro.s"
     1                              <1> %macro	cdecl	1-*.nolist
     2                              <1> 
     3                              <1> 	%rep	%0 - 1
     4                              <1> 		push	%{-1:-1}
     5                              <1> 		%rotate -1
     6                              <1> 	%endrep
     7                              <1> 	%rotate -1
     8                              <1> 
     9                              <1> 
    10                              <1> 		call	%1
    11                              <1> 
    12                              <1> 	%if	1 < %0
    13                              <1> 		add		sp, (__BITS__ >> 3) * (%0 - 1)
    14                              <1> 	%endif
    15                              <1> 
    16                              <1> %endmacro
    17                              <1> 
    18                              <1> 	
    19                              <1> struc drive
    20 00000000 <res 00000002>      <1> 		.no				resw	1				; ドライブ番号
    21 00000002 <res 00000002>      <1> 		.cyln			resw	1				; C:シリンダ
    22 00000004 <res 00000002>      <1> 		.head			resw	1				; H:ヘッド
    23 00000006 <res 00000002>      <1> 		.sect			resw	1				; S:セクタ
    24                              <1> endstruc
     4                                  	
     5                                  	ORG		BOOT_LOAD
     6                                  
     7                                  ;;【エントリポイント】 
     8                                  entry:
     9 00000000 EB58                    	jmp	ipl						;IPLへジャンプ
    10                                  	;; BPB(Bios Parameter Block)
    11                                  
    12 00000002 90<rept>                	times 90 - ($ - $$) db 0x90
    13                                  
    14                                  	;; IPL(Initial Program Loader)
    15                                  
    16                                  ipl:
    17 0000005A FA                      	cli							;割り込み禁止
    18                                  
    19 0000005B B80000                  	mov	ax, 0x000				;AX = 0x0000
    20 0000005E 8ED8                    	mov ds, ax					;DS = 0x0000
    21 00000060 8EC0                    	mov es, ax					;ES = 0x0000
    22 00000062 8ED0                    	mov ss, ax					;SS = 0x0000
    23 00000064 BC007C                  	mov sp, BOOT_LOAD			;SP = 0x7C00
    24                                  
    25 00000067 FB                      	sti							;割り込み許可
    26                                  
    27 00000068 8816[BC00]              	mov [BOOT + drive.no], dl		;ブートドライブ
    28                                  
    29                                  	;; 【文字列を表示】
    30 0000006C 68[9900]E8520083C4-     	cdecl	puts, .s0
    30 00000074 02                 
    31                                  
    32                                  	;;残りのセクタをすべて読み込む
    33 00000075 BB0F00                  	mov		bx, BOOT_SECT - 1	;BX = 残りのブートセクタ数
    34 00000078 B9007E                  	mov		cx, BOOT_LOAD + SECT_SIZE ;CX = 次のロードアドレス
    35                                  
    36 0000007B 515368[BC00]E81F01-     	cdecl	read_chs, BOOT, bx, cx
    36 00000083 83C406             
    37                                  
    38 00000086 39D8                    	cmp		ax, bx
    39                                  .10Q:
    40 00000088 740C                    	jz		.10E
    41                                  .10T:
    42 0000008A 68[AA00]E8340083C4-     	cdecl	puts, .e0
    42 00000092 02                 
    43 00000093 E8CD00                  	call	reboot
    44                                  .10E:
    45                                  
    46                                  	;; 次のステージへ移行
    47                                  	
    48 00000096 E96701                  	jmp		stage_2
    49                                  	
    50                                  	;; 【データ】
    51 00000099 4E6F7720426F6F7469-     .s0		db "Now Booting...", 0x0A, 0x0D, 0
    51 000000A2 6E672E2E2E0A0D00   
    52 000000AA 4572726F723A736563-     .e0		db "Error:sector read", 0
    52 000000B3 746F72207265616400 
    53                                  
    54                                  ;; ブートドライブに関する情報
    55                                  ALIGN	2, db 0
    56                                  BOOT:
    57                                  	istruc	drive
    58 000000BC 0000                    		at	drive.no,	dw	0
    59 000000BE 0000                    		at	drive.cyln,	dw	0
    60 000000C0 0000                    		at	drive.head,	dw	0
    61 000000C2 0200                    		at	drive.sect,	dw	2
    62                                  	iend
    63                                  	
    64                                  ;; 【モジュール】
    65                                  %include "../modules/real/puts.s"
     1                              <1> puts:
     2 000000C4 55                  <1> 	push	bp
     3 000000C5 89E5                <1> 	mov		bp, sp
     4                              <1> 
     5                              <1> 	;; 【レジスタの保存】
     6 000000C7 50                  <1> 	push	ax
     7 000000C8 53                  <1> 	push	bx
     8 000000C9 56                  <1> 	push	si
     9                              <1> 
    10                              <1> 	;; 【引数を取得】
    11 000000CA 8B7604              <1> 	mov		si,	[bp + 4]
    12                              <1> 
    13                              <1> 
    14                              <1> 	;; 【処理の開始】
    15 000000CD B40E                <1> 	mov		ah, 0x0E
    16 000000CF BB0000              <1> 	mov		bx, 0x0000
    17 000000D2 FC                  <1> 	cld							;DF = 0アドレス加算
    18                              <1> 
    19                              <1> .10L:
    20 000000D3 AC                  <1> 	lodsb
    21                              <1> 
    22 000000D4 3C00                <1> 	cmp		al, 0
    23 000000D6 7404                <1> 	je		.10E
    24                              <1> 
    25 000000D8 CD10                <1> 	int		0x10
    26 000000DA EBF7                <1> 	jmp		.10L
    27                              <1> .10E:
    28                              <1> 
    29 000000DC 5E                  <1> 	pop		si
    30 000000DD 5B                  <1> 	pop		bx
    31 000000DE 58                  <1> 	pop		ax
    32                              <1> 
    33 000000DF 89EC                <1> 	mov 	sp, bp
    34 000000E1 5D                  <1> 	pop		bp
    35                              <1> 
    36 000000E2 C3                  <1> 	ret
    66                                  %include "../modules/real/itoa.s"	
     1                              <1> itoa:
     2                              <1> 	;; 【スタックフレームの構築】
     3                              <1> 
     4                              <1> 
     5 000000E3 55                  <1> 	push	bp
     6 000000E4 89E5                <1> 	mov		bp, sp
     7                              <1> 
     8                              <1> 
     9                              <1> 	;; 【レジスタの保存】
    10 000000E6 50                  <1> 	push	ax
    11 000000E7 53                  <1> 	push	bx
    12 000000E8 51                  <1> 	push	cx
    13 000000E9 52                  <1> 	push	dx
    14 000000EA 56                  <1> 	push	si
    15 000000EB 57                  <1> 	push	di
    16                              <1> 
    17                              <1> 	;; 引数を取得
    18 000000EC 8B4604              <1> 	mov		ax, [bp + 4]		;val = 数値
    19 000000EF 8B7606              <1> 	mov		si, [bp + 6]		;dst = バッファアドレス
    20 000000F2 8B4E08              <1> 	mov		cx, [bp + 8]		;size = 残りバッファアサイズ
    21                              <1> 
    22 000000F5 89F7                <1> 	mov		di, si
    23 000000F7 01CF                <1> 	add		di, cx
    24 000000F9 4F                  <1> 	dec		di
    25                              <1> 
    26 000000FA 8B5E0C              <1> 	mov		bx, word [bp + 12]
    27                              <1> 
    28                              <1> 	;; 符号付き判定
    29 000000FD F7C30100            <1> 	test	bx, 0b0001
    30                              <1> .10Q:
    31 00000101 7408                <1> 	je		.10E
    32 00000103 83F800              <1> 	cmp		ax, 0
    33                              <1> .12Q:
    34 00000106 7D03                <1> 	jge		.12E
    35 00000108 83CB02              <1> 	or		bx, 0b0010
    36                              <1> .12E:
    37                              <1> .10E:	
    38                              <1> 
    39                              <1> 	;; 符号出力判定
    40 0000010B F7C30200            <1> 	test	bx, 0b0010
    41                              <1> .20Q:
    42 0000010F 7410                <1> 	je		.20E
    43 00000111 83F800              <1> 	cmp		ax, 0
    44                              <1> .22Q:
    45 00000114 7D07                <1> 	jge		.22F
    46 00000116 F7D8                <1> 	neg		ax
    47 00000118 C6042D              <1> 	mov		[si], byte '-'
    48 0000011B EB03                <1> 	jmp		.22E
    49                              <1> .22F:
    50 0000011D C6042B              <1> 	mov		[si], byte '+'
    51                              <1> .22E:
    52 00000120 49                  <1> 	dec		cx
    53                              <1> .20E:
    54                              <1> 
    55                              <1> 	;; ASCII変換
    56                              <1> 
    57 00000121 8B5E0A              <1> 	mov		bx, [bp + 10]
    58                              <1> .30L:
    59 00000124 BA0000              <1> 	mov		dx, 0
    60 00000127 F7F3                <1> 	div		bx
    61                              <1> 
    62 00000129 89D6                <1> 	mov		si, dx
    63 0000012B 8A94[5301]          <1> 	mov		dl, byte [.ascii + si] ;dl = Ascii[dx]
    64                              <1> 
    65 0000012F 8815                <1> 	mov 	[di], dl
    66 00000131 4F                  <1> 	dec		di
    67                              <1> 
    68 00000132 83F800              <1> 	cmp		ax, 0
    69 00000135 E0ED                <1> 	loopnz	.30L
    70                              <1> 
    71                              <1> .30E:
    72                              <1> 
    73                              <1> 	;; 空欄を埋める
    74 00000137 83F900              <1> 	cmp		cx, 0
    75                              <1> .40Q:
    76 0000013A 740D                <1> 	je		.40E
    77 0000013C B020                <1> 	mov		al, ' '
    78 0000013E 837E0C04            <1> 	cmp		[bp + 12], word 0b0100
    79                              <1> .42Q:
    80 00000142 7502                <1> 	jne		.42E
    81 00000144 B030                <1> 	mov		al, '0'
    82                              <1> .42E:
    83 00000146 FD                  <1> 	std
    84 00000147 F3AA                <1> 	rep	stosb
    85                              <1> 
    86                              <1> .40E:
    87                              <1> 
    88                              <1> 
    89                              <1> 	;; 【レジウスタの復帰】
    90                              <1> 
    91 00000149 5F                  <1> 	pop		di
    92 0000014A 5E                  <1> 	pop		si
    93 0000014B 5A                  <1> 	pop		dx
    94 0000014C 59                  <1> 	pop		cx
    95 0000014D 5B                  <1> 	pop		bx
    96 0000014E 58                  <1> 	pop		ax
    97                              <1> 
    98                              <1> 
    99                              <1> 	;; 【スタックフレームのは木】
   100 0000014F 89EC                <1> 	mov		sp, bp
   101 00000151 5D                  <1> 	pop		bp
   102                              <1> 
   103 00000152 C3                  <1> 	ret
   104                              <1> 
   105 00000153 303132333435363738- <1> .ascii	db	"0123456789ABCDEF"
   105 0000015C 39414243444546      <1>
   106                              <1> 	
   107                              <1> 	
    67                                  %include "../modules/real/reboot.s"
     1                              <1> reboot:
     2                              <1> 	;; メッセージ表示
     3 00000163 68[7F01]E85BFF83C4- <1> 	cdecl	puts, .s0
     3 0000016B 02                  <1>
     4                              <1> 
     5                              <1> 	;; 	キー入力
     6                              <1> 
     7                              <1> .10L:
     8 0000016C B410                <1> 	mov		ah, 0x10
     9 0000016E CD16                <1> 	int		0x16
    10                              <1> 
    11 00000170 3C20                <1> 	cmp		al, ' '
    12 00000172 75F8                <1> 	jne		.10L
    13                              <1> 
    14                              <1> 	;; 改行出力
    15 00000174 68[9D01]E84AFF83C4- <1> 	cdecl	puts, .s1
    15 0000017C 02                  <1>
    16                              <1> 
    17                              <1> 	;; 再起動
    18 0000017D CD19                <1> 	int		0x19				;BIOS(0x19)
    19                              <1> 
    20                              <1> 	;; 文字データ
    21 0000017F 0A0D50757368205350- <1> .s0		db	0x0A, 0x0D, "Push SPACE key to reboot...", 0
    21 00000188 414345206B65792074- <1>
    21 00000191 6F207265626F6F742E- <1>
    21 0000019A 2E2E00              <1>
    22 0000019D 0A0D0A0D00          <1> .s1		db	0x0A, 0x0D, 0x0A, 0x0D, 0
    68                                  %include "../modules/real/read_chs.s"
     1                              <1> read_chs:
     2                              <1> 	;; スタックフレームの構築
     3                              <1> 
     4 000001A2 55                  <1> 	push	bp
     5 000001A3 89E5                <1> 	mov		bp, sp
     6 000001A5 6A03                <1> 	push	3
     7 000001A7 6A00                <1> 	push	0
     8                              <1> 
     9                              <1> 	;; レジスタの保存
    10 000001A9 53                  <1> 	push	bx
    11 000001AA 51                  <1> 	push	cx
    12 000001AB 52                  <1> 	push	dx
    13 000001AC 06                  <1> 	push	es
    14 000001AD 56                  <1> 	push	si
    15                              <1> 
    16                              <1> 	;; 処理の開始
    17 000001AE 8B7604              <1> 	mov		si, [bp + 4]		;SI = SRCバッファ
    18                              <1> 
    19                              <1> 	;; CXレジスタの設定
    20                              <1> 	;; （BIOSコールの呼び出しに適した形に変換）
    21 000001B1 8A6C02              <1> 	mov		ch, [si + drive.cyln + 0]
    22 000001B4 8A4C03              <1> 	mov		cl, [si + drive.cyln + 1]
    23 000001B7 C0E106              <1> 	shl		cl, 6
    24 000001BA 0A4C06              <1> 	or		cl, [si + drive.sect]
    25                              <1> 
    26                              <1> 	;; セクタの読み込み
    27 000001BD 8A7404              <1> 	mov		dh, [si + drive.head]
    28 000001C0 8A14                <1> 	mov		dl, [si + 0]
    29 000001C2 B80000              <1> 	mov		ax, 0x0000
    30 000001C5 8EC0                <1> 	mov		es, ax
    31 000001C7 8B5E08              <1> 	mov		bx, [bp + 8]
    32                              <1> .10L:
    33                              <1> 
    34 000001CA B402                <1> 	mov		ah, 0x02
    35 000001CC 8A4606              <1> 	mov		al, [bp + 6]
    36                              <1> 
    37 000001CF CD13                <1> 	int		0x13
    38 000001D1 7304                <1> 	jnc		.11E
    39                              <1> 
    40 000001D3 B000                <1> 	mov		al, 0
    41 000001D5 EB0C                <1> 	jmp		.10E
    42                              <1> .11E:
    43                              <1> 
    44 000001D7 3C00                <1> 	cmp		al, 0
    45 000001D9 7508                <1> 	jne		.10E
    46                              <1> 
    47 000001DB B80000              <1> 	mov		ax, 0
    48 000001DE FF4EFE              <1> 	dec		word [bp - 2]
    49 000001E1 75E7                <1> 	jnz		.10L
    50                              <1> 
    51                              <1> .10E:
    52 000001E3 B400                <1> 	mov		ah, 0
    53                              <1> 
    54 000001E5 5E                  <1> 	pop		si
    55 000001E6 07                  <1> 	pop		es
    56 000001E7 5A                  <1> 	pop		dx
    57 000001E8 59                  <1> 	pop		cx
    58 000001E9 5B                  <1> 	pop		bx
    59                              <1> 
    60                              <1> 
    61 000001EA 89EC                <1> 	mov		sp, bp
    62 000001EC 5D                  <1> 	pop		bp
    63                              <1> 
    64                              <1> 
    65 000001ED C3                  <1> 	ret
    66                              <1> 	
    69                                  	
    70                                  	;; 【ブートフラグ】 
    71 000001EE 00<rept>                	times 510 - ($ - $$) db 0x00
    72 000001FE 55AA                    	db 0x55, 0xAA
    73                                  
    74                                  	
    75                                  ;;ブート処理第２ステージ
    76                                  stage_2:
    77 00000200 68[0B02]E8BEFE83C4-     	cdecl 	puts, .s0
    77 00000208 02                 
    78                                  
    79 00000209 EBFE                    	jmp		$
    80                                  
    81 0000020B 326E64207374616765-     .s0		db "2nd stage...", 0x0A, 0x0D, 0
    81 00000214 2E2E2E0A0D00       
    82                                  
    83                                  ;; パディング（このファイルは8kバイトとする）
    84 0000021A 00<rept>                	times BOOT_SIZE - ($ - $$)		db	0
