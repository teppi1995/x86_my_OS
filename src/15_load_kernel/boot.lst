     1                                  	;; 【マクロ】
     2                                  %include	"../include/define.s"
     1                              <1> 	BOOT_LOAD	equ		0x7C00	;ブートプログラムのロード位置
     2                              <1> 	BOOT_SIZE	equ		(1024 * 8) ;ブートコードサイズ
     3                              <1> 	SECT_SIZE	equ		(512)	   ;セクタサイズ
     4                              <1> 	BOOT_SECT	equ		(BOOT_SIZE / SECT_SIZE) ;ブートプログラムのセクタ数
     5                              <1> 
     6                              <1> 	BOOT_END	equ		(BOOT_LOAD + BOOT_SIZE)
     7                              <1> 	
     8                              <1> 	E820_RECORD_SIZE	equ		20
     9                              <1> 
    10                              <1> 
    11                              <1> 	;; KERNEL
    12                              <1> 	;; add 15_load_kernel
    13                              <1> 	KERNEL_LOAD		equ		0x0010_1000
    14                              <1> 	KERNEL_SIZE		equ		(1024 * 8) ;カーネルサイズ
    15                              <1> 	KERNEL_SECT		equ		(KERNEL_SIZE / SECT_SIZE)
    16                              <1> 	
    17                              <1> 	
     3                                  %include	"../include/macro.s"
     1                              <1> %macro	cdecl	1-*.nolist
     2                              <1> 
     3                              <1> 	%rep	%0 - 1
     4                              <1> 		push	%{-1:-1}
     5                              <1> 		%rotate -1
     6                              <1> 	%endrep
     7                              <1> 	%rotate -1
     8                              <1> 
     9                              <1> 
    10                              <1> 		call	%1
    11                              <1> 
    12                              <1> 	%if	1 < %0
    13                              <1> 		add		sp, (__BITS__ >> 3) * (%0 - 1)
    14                              <1> 	%endif
    15                              <1> 
    16                              <1> %endmacro
    17                              <1> 
    18                              <1> 	
    19                              <1> struc drive
    20 00000000 <res 00000002>      <1> 		.no				resw	1				; ドライブ番号
    21 00000002 <res 00000002>      <1> 		.cyln			resw	1				; C:シリンダ
    22 00000004 <res 00000002>      <1> 		.head			resw	1				; H:ヘッド
    23 00000006 <res 00000002>      <1> 		.sect			resw	1				; S:セクタ
    24                              <1> endstruc
     4                                  	
     5                                  	ORG		BOOT_LOAD
     6                                  
     7                                  ;;【エントリポイント】 
     8                                  entry:
     9 00000000 EB58                    	jmp	ipl						;IPLへジャンプ
    10                                  	;; BPB(Bios Parameter Block)
    11                                  
    12 00000002 90<rept>                	times 90 - ($ - $$) db 0x90
    13                                  
    14                                  	;; IPL(Initial Program Loader)
    15                                  
    16                                  ipl:
    17 0000005A FA                      	cli							;割り込み禁止
    18                                  
    19 0000005B B80000                  	mov	ax, 0x000				;AX = 0x0000
    20 0000005E 8ED8                    	mov ds, ax					;DS = 0x0000
    21 00000060 8EC0                    	mov es, ax					;ES = 0x0000
    22 00000062 8ED0                    	mov ss, ax					;SS = 0x0000
    23 00000064 BC007C                  	mov sp, BOOT_LOAD			;SP = 0x7C00
    24                                  
    25 00000067 FB                      	sti							;割り込み許可
    26                                  
    27 00000068 8816[BC00]              	mov [BOOT + drive.no], dl		;ブートドライブ
    28                                  
    29                                  	;; 【文字列を表示】
    30 0000006C 68[9900]E8520083C4-     	cdecl	puts, .s0
    30 00000074 02                 
    31                                  
    32                                  	;;残りのセクタをすべて読み込む
    33 00000075 BB0F00                  	mov		bx, BOOT_SECT - 1	;BX = 残りのブートセクタ数
    34 00000078 B9007E                  	mov		cx, BOOT_LOAD + SECT_SIZE ;CX = 次のロードアドレス
    35                                  
    36 0000007B 515368[BC00]E89F00-     	cdecl	read_chs, BOOT, bx, cx
    36 00000083 83C406             
    37                                  
    38 00000086 39D8                    	cmp		ax, bx
    39                                  .10Q:
    40 00000088 740C                    	jz		.10E
    41                                  .10T:
    42 0000008A 68[AA00]E8340083C4-     	cdecl	puts, .e0
    42 00000092 02                 
    43 00000093 E84D00                  	call	reboot
    44                                  .10E:
    45                                  
    46                                  	;; 次のステージへ移行
    47                                  	
    48 00000096 E9D305                  	jmp		stage_2
    49                                  	
    50                                  	;; 【データ】
    51 00000099 4E6F7720426F6F7469-     .s0		db "Now Booting...", 0x0A, 0x0D, 0
    51 000000A2 6E672E2E2E0A0D00   
    52 000000AA 4572726F723A736563-     .e0		db "Error:sector read", 0
    52 000000B3 746F72207265616400 
    53                                  
    54                                  ;; ブートドライブに関する情報
    55                                  ALIGN	2, db 0
    56                                  BOOT:
    57                                  	istruc	drive
    58 000000BC 0000                    		at	drive.no,	dw	0
    59 000000BE 0000                    		at	drive.cyln,	dw	0
    60 000000C0 0000                    		at	drive.head,	dw	0
    61 000000C2 0200                    		at	drive.sect,	dw	2
    62                                  	iend
    63                                  	
    64                                  ;; 【モジュール】
    65                                  %include "../modules/real/puts.s"
     1                              <1> puts:
     2 000000C4 55                  <1> 	push	bp
     3 000000C5 89E5                <1> 	mov		bp, sp
     4                              <1> 
     5                              <1> 	;; 【レジスタの保存】
     6 000000C7 50                  <1> 	push	ax
     7 000000C8 53                  <1> 	push	bx
     8 000000C9 56                  <1> 	push	si
     9                              <1> 
    10                              <1> 	;; 【引数を取得】
    11 000000CA 8B7604              <1> 	mov		si,	[bp + 4]
    12                              <1> 
    13                              <1> 
    14                              <1> 	;; 【処理の開始】
    15 000000CD B40E                <1> 	mov		ah, 0x0E
    16 000000CF BB0000              <1> 	mov		bx, 0x0000
    17 000000D2 FC                  <1> 	cld							;DF = 0アドレス加算
    18                              <1> 
    19                              <1> .10L:
    20 000000D3 AC                  <1> 	lodsb
    21                              <1> 
    22 000000D4 3C00                <1> 	cmp		al, 0
    23 000000D6 7404                <1> 	je		.10E
    24                              <1> 
    25 000000D8 CD10                <1> 	int		0x10
    26 000000DA EBF7                <1> 	jmp		.10L
    27                              <1> .10E:
    28                              <1> 
    29 000000DC 5E                  <1> 	pop		si
    30 000000DD 5B                  <1> 	pop		bx
    31 000000DE 58                  <1> 	pop		ax
    32                              <1> 
    33 000000DF 89EC                <1> 	mov 	sp, bp
    34 000000E1 5D                  <1> 	pop		bp
    35                              <1> 
    36 000000E2 C3                  <1> 	ret
    66                                  %include "../modules/real/reboot.s"
     1                              <1> reboot:
     2                              <1> 	;; メッセージ表示
     3 000000E3 68[FF00]E8DBFF83C4- <1> 	cdecl	puts, .s0
     3 000000EB 02                  <1>
     4                              <1> 
     5                              <1> 	;; 	キー入力
     6                              <1> 
     7                              <1> .10L:
     8 000000EC B410                <1> 	mov		ah, 0x10
     9 000000EE CD16                <1> 	int		0x16
    10                              <1> 
    11 000000F0 3C20                <1> 	cmp		al, ' '
    12 000000F2 75F8                <1> 	jne		.10L
    13                              <1> 
    14                              <1> 	;; 改行出力
    15 000000F4 68[1D01]E8CAFF83C4- <1> 	cdecl	puts, .s1
    15 000000FC 02                  <1>
    16                              <1> 
    17                              <1> 	;; 再起動
    18 000000FD CD19                <1> 	int		0x19				;BIOS(0x19)
    19                              <1> 
    20                              <1> 	;; 文字データ
    21 000000FF 0A0D50757368205350- <1> .s0		db	0x0A, 0x0D, "Push SPACE key to reboot...", 0
    21 00000108 414345206B65792074- <1>
    21 00000111 6F207265626F6F742E- <1>
    21 0000011A 2E2E00              <1>
    22 0000011D 0A0D0A0D00          <1> .s1		db	0x0A, 0x0D, 0x0A, 0x0D, 0
    67                                  %include "../modules/real/read_chs.s"
     1                              <1> read_chs:
     2                              <1> 	;; スタックフレームの構築
     3                              <1> 
     4 00000122 55                  <1> 	push	bp
     5 00000123 89E5                <1> 	mov		bp, sp
     6 00000125 6A03                <1> 	push	3
     7 00000127 6A00                <1> 	push	0
     8                              <1> 
     9                              <1> 	;; レジスタの保存
    10 00000129 53                  <1> 	push	bx
    11 0000012A 51                  <1> 	push	cx
    12 0000012B 52                  <1> 	push	dx
    13 0000012C 06                  <1> 	push	es
    14 0000012D 56                  <1> 	push	si
    15                              <1> 
    16                              <1> 	;; 処理の開始
    17 0000012E 8B7604              <1> 	mov		si, [bp + 4]		;SI = SRCバッファ
    18                              <1> 
    19                              <1> 	;; CXレジスタの設定
    20                              <1> 	;; （BIOSコールの呼び出しに適した形に変換）
    21 00000131 8A6C02              <1> 	mov		ch, [si + drive.cyln + 0]
    22 00000134 8A4C03              <1> 	mov		cl, [si + drive.cyln + 1]
    23 00000137 C0E106              <1> 	shl		cl, 6
    24 0000013A 0A4C06              <1> 	or		cl, [si + drive.sect]
    25                              <1> 
    26                              <1> 	;; セクタの読み込み
    27 0000013D 8A7404              <1> 	mov		dh, [si + drive.head]
    28 00000140 8A14                <1> 	mov		dl, [si + 0]
    29 00000142 B80000              <1> 	mov		ax, 0x0000
    30 00000145 8EC0                <1> 	mov		es, ax
    31 00000147 8B5E08              <1> 	mov		bx, [bp + 8]
    32                              <1> .10L:
    33                              <1> 
    34 0000014A B402                <1> 	mov		ah, 0x02
    35 0000014C 8A4606              <1> 	mov		al, [bp + 6]
    36                              <1> 
    37 0000014F CD13                <1> 	int		0x13
    38 00000151 7304                <1> 	jnc		.11E
    39                              <1> 
    40 00000153 B000                <1> 	mov		al, 0
    41 00000155 EB0C                <1> 	jmp		.10E
    42                              <1> .11E:
    43                              <1> 
    44 00000157 3C00                <1> 	cmp		al, 0
    45 00000159 7508                <1> 	jne		.10E
    46                              <1> 
    47 0000015B B80000              <1> 	mov		ax, 0
    48 0000015E FF4EFE              <1> 	dec		word [bp - 2]
    49 00000161 75E7                <1> 	jnz		.10L
    50                              <1> 
    51                              <1> .10E:
    52 00000163 B400                <1> 	mov		ah, 0
    53                              <1> 
    54 00000165 5E                  <1> 	pop		si
    55 00000166 07                  <1> 	pop		es
    56 00000167 5A                  <1> 	pop		dx
    57 00000168 59                  <1> 	pop		cx
    58 00000169 5B                  <1> 	pop		bx
    59                              <1> 
    60                              <1> 
    61 0000016A 89EC                <1> 	mov		sp, bp
    62 0000016C 5D                  <1> 	pop		bp
    63                              <1> 
    64                              <1> 
    65 0000016D C3                  <1> 	ret
    66                              <1> 	
    68                                  
    69                                  	;; 【ブートフラグ】 
    70 0000016E 00<rept>                	times 510 - ($ - $$) db 0x00
    71 000001FE 55AA                    	db 0x55, 0xAA
    72                                  
    73                                  	;; リアルモード時に取得した情報
    74                                  FONT:							;フォント
    75 00000200 0000                    	.seg:	dw	0
    76 00000202 0000                    	.off:	dw	0
    77                                  
    78                                  ACPI_DATA:
    79 00000204 00000000                	.adr:	dd	0
    80 00000208 00000000                	.len:	dd	0
    81                                  	
    82                                  ;;【モジュール（512バイト移行に配置）】 
    83                                  %include "../modules/real/itoa.s"	
     1                              <1> itoa:
     2                              <1> 	;; 【スタックフレームの構築】
     3                              <1> 
     4                              <1> 
     5 0000020C 55                  <1> 	push	bp
     6 0000020D 89E5                <1> 	mov		bp, sp
     7                              <1> 
     8                              <1> 
     9                              <1> 	;; 【レジスタの保存】
    10 0000020F 50                  <1> 	push	ax
    11 00000210 53                  <1> 	push	bx
    12 00000211 51                  <1> 	push	cx
    13 00000212 52                  <1> 	push	dx
    14 00000213 56                  <1> 	push	si
    15 00000214 57                  <1> 	push	di
    16                              <1> 
    17                              <1> 	;; 引数を取得
    18 00000215 8B4604              <1> 	mov		ax, [bp + 4]		;val = 数値
    19 00000218 8B7606              <1> 	mov		si, [bp + 6]		;dst = バッファアドレス
    20 0000021B 8B4E08              <1> 	mov		cx, [bp + 8]		;size = 残りバッファアサイズ
    21                              <1> 
    22 0000021E 89F7                <1> 	mov		di, si
    23 00000220 01CF                <1> 	add		di, cx
    24 00000222 4F                  <1> 	dec		di
    25                              <1> 
    26 00000223 8B5E0C              <1> 	mov		bx, word [bp + 12]
    27                              <1> 
    28                              <1> 	;; 符号付き判定
    29 00000226 F7C30100            <1> 	test	bx, 0b0001
    30                              <1> .10Q:
    31 0000022A 7408                <1> 	je		.10E
    32 0000022C 83F800              <1> 	cmp		ax, 0
    33                              <1> .12Q:
    34 0000022F 7D03                <1> 	jge		.12E
    35 00000231 83CB02              <1> 	or		bx, 0b0010
    36                              <1> .12E:
    37                              <1> .10E:	
    38                              <1> 
    39                              <1> 	;; 符号出力判定
    40 00000234 F7C30200            <1> 	test	bx, 0b0010
    41                              <1> .20Q:
    42 00000238 7410                <1> 	je		.20E
    43 0000023A 83F800              <1> 	cmp		ax, 0
    44                              <1> .22Q:
    45 0000023D 7D07                <1> 	jge		.22F
    46 0000023F F7D8                <1> 	neg		ax
    47 00000241 C6042D              <1> 	mov		[si], byte '-'
    48 00000244 EB03                <1> 	jmp		.22E
    49                              <1> .22F:
    50 00000246 C6042B              <1> 	mov		[si], byte '+'
    51                              <1> .22E:
    52 00000249 49                  <1> 	dec		cx
    53                              <1> .20E:
    54                              <1> 
    55                              <1> 	;; ASCII変換
    56                              <1> 
    57 0000024A 8B5E0A              <1> 	mov		bx, [bp + 10]
    58                              <1> .30L:
    59 0000024D BA0000              <1> 	mov		dx, 0
    60 00000250 F7F3                <1> 	div		bx
    61                              <1> 
    62 00000252 89D6                <1> 	mov		si, dx
    63 00000254 8A94[7C02]          <1> 	mov		dl, byte [.ascii + si] ;dl = Ascii[dx]
    64                              <1> 
    65 00000258 8815                <1> 	mov 	[di], dl
    66 0000025A 4F                  <1> 	dec		di
    67                              <1> 
    68 0000025B 83F800              <1> 	cmp		ax, 0
    69 0000025E E0ED                <1> 	loopnz	.30L
    70                              <1> 
    71                              <1> .30E:
    72                              <1> 
    73                              <1> 	;; 空欄を埋める
    74 00000260 83F900              <1> 	cmp		cx, 0
    75                              <1> .40Q:
    76 00000263 740D                <1> 	je		.40E
    77 00000265 B020                <1> 	mov		al, ' '
    78 00000267 837E0C04            <1> 	cmp		[bp + 12], word 0b0100
    79                              <1> .42Q:
    80 0000026B 7502                <1> 	jne		.42E
    81 0000026D B030                <1> 	mov		al, '0'
    82                              <1> .42E:
    83 0000026F FD                  <1> 	std
    84 00000270 F3AA                <1> 	rep	stosb
    85                              <1> 
    86                              <1> .40E:
    87                              <1> 
    88                              <1> 
    89                              <1> 	;; 【レジウスタの復帰】
    90                              <1> 
    91 00000272 5F                  <1> 	pop		di
    92 00000273 5E                  <1> 	pop		si
    93 00000274 5A                  <1> 	pop		dx
    94 00000275 59                  <1> 	pop		cx
    95 00000276 5B                  <1> 	pop		bx
    96 00000277 58                  <1> 	pop		ax
    97                              <1> 
    98                              <1> 
    99                              <1> 	;; 【スタックフレームのは木】
   100 00000278 89EC                <1> 	mov		sp, bp
   101 0000027A 5D                  <1> 	pop		bp
   102                              <1> 
   103 0000027B C3                  <1> 	ret
   104                              <1> 
   105 0000027C 303132333435363738- <1> .ascii	db	"0123456789ABCDEF"
   105 00000285 39414243444546      <1>
   106                              <1> 	
   107                              <1> 	
    84                                  %include "../modules/real/get_drive_param.s"
     1                              <1> get_drive_param:
     2                              <1> 	;; 【スタックフレームの構築】
     3                              <1> 
     4 0000028C 55                  <1> 	push	bp
     5 0000028D 89E5                <1> 	mov		bp, sp
     6                              <1> 
     7                              <1> 	;; 【レジスタの保存】
     8 0000028F 53                  <1> 	push	bx
     9 00000290 51                  <1> 	push	cx
    10 00000291 06                  <1> 	push	es
    11 00000292 56                  <1> 	push	si
    12 00000293 57                  <1> 	push	di
    13                              <1> 
    14                              <1> 	;; 【処理の開始】
    15 00000294 8B7604              <1> 	mov		si, [bp + 4]
    16                              <1> 
    17 00000297 B80000              <1> 	mov		ax, 0
    18 0000029A 8EC0                <1> 	mov		es, ax
    19 0000029C 89C7                <1> 	mov		di, ax
    20                              <1> 
    21 0000029E B408                <1> 	mov		ah, 8
    22 000002A0 8A14                <1> 	mov		dl, [si + drive.no]
    23 000002A2 CD13                <1> 	int		0x13
    24                              <1> .10Q:
    25 000002A4 721B                <1> 	jc		.10F
    26                              <1> .10T:
    27 000002A6 88C8                <1> 	mov		al, cl
    28 000002A8 83E03F              <1> 	and		ax, 0x3F
    29                              <1> 
    30 000002AB C0E906              <1> 	shr		cl, 6
    31 000002AE C1C908              <1> 	ror		cx, 8
    32 000002B1 41                  <1> 	inc		cx
    33                              <1> 
    34 000002B2 0FB6DE              <1> 	movzx	bx, dh
    35 000002B5 43                  <1> 	inc		bx
    36                              <1> 
    37 000002B6 894C02              <1> 	mov		[si + drive.cyln], cx
    38 000002B9 895C04              <1> 	mov		[si + drive.head], bx
    39 000002BC 894406              <1> 	mov		[si + drive.sect], ax
    40                              <1> 
    41 000002BF EB03                <1> 	jmp		.10E
    42                              <1> 
    43                              <1> .10F:
    44                              <1> 
    45 000002C1 B80000              <1> 	mov		ax, 0
    46                              <1> 
    47                              <1> .10E:
    48                              <1> 
    49                              <1> 	;; 【レジスタの復帰】
    50                              <1> 
    51 000002C4 5F                  <1> 	pop		di
    52 000002C5 5E                  <1> 	pop		si
    53 000002C6 07                  <1> 	pop		es
    54 000002C7 59                  <1> 	pop		cx
    55 000002C8 5B                  <1> 	pop		bx
    56                              <1> 
    57                              <1> 	;; 【スタックフレームの破棄】
    58                              <1> 
    59 000002C9 89EC                <1> 	mov		sp, bp
    60 000002CB 5D                  <1> 	pop		bp
    61                              <1> 
    62 000002CC C3                  <1> 	ret
    63                              <1> 	
    64                              <1> 	
    85                                  %include "../modules/real/get_font_adr.s"	
     1                              <1> get_font_adr:
     2                              <1> 	;; 【スタックフレームの構築】
     3                              <1> 
     4                              <1> 
     5 000002CD 55                  <1> 	push 	bp
     6 000002CE 89E5                <1> 	mov		bp, sp
     7                              <1> 
     8                              <1> 	;; 【レジスタの保存】
     9                              <1> 
    10 000002D0 50                  <1> 	push	ax
    11 000002D1 53                  <1> 	push	bx
    12 000002D2 56                  <1> 	push	si
    13 000002D3 06                  <1> 	push	es
    14 000002D4 55                  <1> 	push	bp
    15                              <1> 
    16                              <1> 	;; 引数を取得
    17                              <1> 
    18 000002D5 8B7604              <1> 	mov		si, [bp + 4]
    19                              <1> 
    20                              <1> 	;; フォントアドレスの取得
    21                              <1> 
    22 000002D8 B83011              <1> 	mov		ax, 0x1130
    23 000002DB B706                <1> 	mov		bh, 0x06			; 8 x 16 font (vga/mcga)
    24 000002DD CD10                <1> 	int		10h
    25                              <1> 	
    26                              <1> 	;; Font アドレスを保存
    27                              <1> 
    28 000002DF 8C04                <1> 	mov 	[si + 0], es
    29 000002E1 896C02              <1> 	mov		[si + 2], bp
    30                              <1> 
    31                              <1> 	;; 【レジスタの復帰】
    32                              <1> 
    33 000002E4 5D                  <1> 	pop		bp
    34 000002E5 07                  <1> 	pop		es
    35 000002E6 5E                  <1> 	pop		si
    36 000002E7 5B                  <1> 	pop		bx
    37 000002E8 58                  <1> 	pop		ax
    38                              <1> 
    39                              <1> 	;; 	【スタックフレームの破棄】
    40                              <1> 
    41 000002E9 89EC                <1> 	mov		sp, bp
    42 000002EB 5D                  <1> 	pop		bp
    43                              <1> 
    44                              <1> 
    45 000002EC C3                  <1> 	ret
    46                              <1> 
    47                              <1> 	
    86                                  %include "../modules/real/get_mem_info.s"
     1                              <1> get_mem_info:
     2                              <1> 	;; 【レジスタの保存】
     3                              <1> 
     4 000002ED 6650                <1> 	push	eax
     5 000002EF 6653                <1> 	push	ebx
     6 000002F1 6651                <1> 	push	ecx
     7 000002F3 6652                <1> 	push	edx
     8 000002F5 56                  <1> 	push	si
     9 000002F6 57                  <1> 	push	di
    10 000002F7 55                  <1> 	push	bp
    11                              <1> 
    12 000002F8 68[8C03]E8C6FD83C4- <1> 	cdecl	puts, .s0
    12 00000300 02                  <1>
    13                              <1> 	
    14 00000301 BD0000              <1> 	mov		bp, 0
    15 00000304 66BB00000000        <1> 	mov		ebx, 0
    16                              <1> 	
    17                              <1> .10L:
    18                              <1> 
    19 0000030A 66B820E80000        <1> 	mov		eax, 0x0000E820
    20                              <1> 
    21 00000310 66B914000000        <1> 	mov		ecx, E820_RECORD_SIZE
    22 00000316 66BA50414D53        <1> 	mov		edx, 'PAMS'
    23 0000031C BF[1804]            <1> 	mov		di, .b0
    24 0000031F CD15                <1> 	int		0x15				;BIOS(0x15, 0xE820)
    25                              <1> 
    26                              <1> 	;; コマンドに対応か？？
    27 00000321 663D50414D53        <1> 	cmp		eax, 'PAMS'
    28 00000327 7402                <1> 	je		.12E
    29 00000329 EB4C                <1> 	jmp		.10E
    30                              <1> .12E:
    31                              <1> 	
    32 0000032B 7302                <1> 	jnc		.14E
    33 0000032D EB48                <1> 	jmp		.10E
    34                              <1> .14E:
    35                              <1> 
    36                              <1> 	;; 1レコード分のメモリ情報を表示
    37 0000032F 57E8F90083C402      <1> 	cdecl		put_mem_info, 	di
    38                              <1> 
    39                              <1> 	;; ACPI data のアドレスを取得
    40 00000336 668B4510            <1> 	mov		eax, [di + 16]
    41 0000033A 6683F803            <1> 	cmp		eax, 3
    42 0000033E 750F                <1> 	jne		.15E
    43                              <1> 
    44 00000340 668B05              <1> 	mov		eax, [di + 0]
    45 00000343 66A3[0402]          <1> 	mov		[ACPI_DATA.adr], eax
    46                              <1> 
    47 00000347 668B4508            <1> 	mov		eax, [di + 8]
    48 0000034B 66A3[0802]          <1> 	mov		[ACPI_DATA.len], eax
    49                              <1> .15E:
    50                              <1> 
    51 0000034F 6683FB00            <1> 	cmp		ebx, 0
    52 00000353 741C                <1> 	jz		.16E
    53                              <1> 	
    54 00000355 45                  <1> 	inc		bp
    55 00000356 83E507              <1> 	and		bp, 0x07
    56 00000359 7516                <1> 	jnz		.16E
    57                              <1> 
    58 0000035B 68[FF03]E863FD83C4- <1> 	cdecl	puts, .s2
    58 00000363 02                  <1>
    59                              <1> 
    60 00000364 B410                <1> 	mov		ah, 0x10
    61 00000366 CD16                <1> 	int		0x16				;AL = BIOS(0x16, 0x10)
    62                              <1> 
    63 00000368 68[0A04]E856FD83C4- <1> 	cdecl	puts, .s3
    63 00000370 02                  <1>
    64                              <1> 	
    65                              <1> .16E:
    66                              <1> 
    67 00000371 6683FB00            <1> 	cmp		ebx, 0
    68 00000375 7593                <1> 	jne		.10L
    69                              <1> 
    70                              <1> .10E:
    71                              <1> 
    72 00000377 68[CF03]E847FD83C4- <1> 		cdecl	puts, .s1						; // フッダを表示
    72 0000037F 02                  <1>
    73                              <1> 
    74                              <1> 		;---------------------------------------
    75                              <1> 		; 【レジスタの復帰】
    76                              <1> 		;---------------------------------------
    77 00000380 5D                  <1> 		pop		bp
    78 00000381 5F                  <1> 		pop		di
    79 00000382 5E                  <1> 		pop		si
    80 00000383 665A                <1> 		pop		edx
    81 00000385 6659                <1> 		pop		ecx
    82 00000387 665B                <1> 		pop		ebx
    83 00000389 6658                <1> 		pop		eax
    84                              <1> 
    85 0000038B C3                  <1> 		ret
    86                              <1> 
    87                              <1> 	
    88                              <1> 
    89 0000038C 2045383230204D656D- <1> .s0:	db " E820 Memory Map:", 0x0A, 0x0D
    89 00000395 6F7279204D61703A0A- <1>
    89 0000039E 0D                  <1>
    90 0000039F 20426173655F5F5F5F- <1> 		db " Base_____________ Length___________ Type____", 0x0A, 0x0D, 0
    90 000003A8 5F5F5F5F5F5F5F5F5F- <1>
    90 000003B1 204C656E6774685F5F- <1>
    90 000003BA 5F5F5F5F5F5F5F5F5F- <1>
    90 000003C3 20547970655F5F5F5F- <1>
    90 000003CC 0A0D00              <1>
    91 000003CF 202D2D2D2D2D2D2D2D- <1> .s1:	db " ----------------- ----------------- --------", 0x0A, 0x0D, 0
    91 000003D8 2D2D2D2D2D2D2D2D2D- <1>
    91 000003E1 202D2D2D2D2D2D2D2D- <1>
    91 000003EA 2D2D2D2D2D2D2D2D2D- <1>
    91 000003F3 202D2D2D2D2D2D2D2D- <1>
    91 000003FC 0A0D00              <1>
    92 000003FF 203C6D6F72652E2E2E- <1> .s2:	db " <more...>", 0
    92 00000408 3E00                <1>
    93 0000040A 0D2020202020202020- <1> .s3:	db 0x0D, "          ", 0x0D, 0
    93 00000413 20200D00            <1>
    94                              <1> 
    95 00000417 00                  <1> ALIGN 4, db 0
    96 00000418 00<rept>            <1> .b0:	times E820_RECORD_SIZE db 0
    97                              <1> 
    98                              <1> 	
    99                              <1> put_mem_info:
   100                              <1> 	;; 【スタックフレームの構築】
   101                              <1> 
   102 0000042C 55                  <1> 	push	bp
   103 0000042D 89E5                <1> 	mov		bp, sp
   104                              <1> 
   105                              <1> 	;; 【レジスタの保存】
   106                              <1> 
   107 0000042F 53                  <1> 	push	bx
   108 00000430 56                  <1> 	push	si
   109                              <1> 
   110                              <1> 	;; 引数の取得
   111 00000431 8B7604              <1> 	mov		si, [bp + 4]
   112                              <1> 
   113                              <1> 	;; Base(64bit)
   114 00000434 6A046A106A0468-     <1> 	cdecl	itoa, word [si + 6], .p2 + 0, 4, 16, 0b0100
   114 0000043B [0B05]FF7406E8C9FD- <1>
   114 00000443 83C40A              <1>
   115 00000446 6A046A106A0468-     <1> 	cdecl	itoa, word [si + 4], .p2 + 4, 4, 16, 0b0100
   115 0000044D [0F05]FF7404E8B7FD- <1>
   115 00000455 83C40A              <1>
   116 00000458 6A046A106A0468-     <1> 	cdecl	itoa, word [si + 2], .p3 + 0, 4, 16, 0b0100
   116 0000045F [1405]FF7402E8A5FD- <1>
   116 00000467 83C40A              <1>
   117 0000046A 6A046A106A0468-     <1> 	cdecl	itoa, word [si + 0], .p3 + 4, 4, 16, 0b0100
   117 00000471 [1805]FF34E894FD83- <1>
   117 00000479 C40A                <1>
   118                              <1> 
   119                              <1> 	;; Length(64bit)
   120 0000047B 6A046A106A0468-     <1> 	cdecl	itoa, word [si + 14], .p4 + 0, 4, 16, 0b0100
   120 00000482 [1D05]FF740EE882FD- <1>
   120 0000048A 83C40A              <1>
   121 0000048D 6A046A106A0468-     <1> 	cdecl	itoa, word [si + 12], .p4 + 4, 4, 16, 0b0100
   121 00000494 [2105]FF740CE870FD- <1>
   121 0000049C 83C40A              <1>
   122 0000049F 6A046A106A0468-     <1> 	cdecl	itoa, word [si + 10], .p5 + 0, 4, 16, 0b0100
   122 000004A6 [2605]FF740AE85EFD- <1>
   122 000004AE 83C40A              <1>
   123 000004B1 6A046A106A0468-     <1> 	cdecl	itoa, word [si +  8], .p5 + 4, 4, 16, 0b0100
   123 000004B8 [2A05]FF7408E84CFD- <1>
   123 000004C0 83C40A              <1>
   124                              <1> 
   125                              <1> 	;; type(32bit)
   126 000004C3 6A046A106A0468-     <1> 	cdecl	itoa, word [si + 18], .p6 + 0, 4, 16, 0b0100
   126 000004CA [2F05]FF7412E83AFD- <1>
   126 000004D2 83C40A              <1>
   127 000004D5 6A046A106A0468-     <1> 	cdecl	itoa, word [si + 16], .p6 + 4, 4, 16, 0b0100
   127 000004DC [3305]FF7410E828FD- <1>
   127 000004E4 83C40A              <1>
   128                              <1> 
   129 000004E7 68[0A05]E8D7FB83C4- <1> 	cdecl	puts, .s1
   129 000004EF 02                  <1>
   130                              <1> 
   131                              <1> 
   132 000004F0 8B5C10              <1> 	mov		bx, [si + 16]
   133 000004F3 83E307              <1> 	and		bx, 0x07
   134 000004F6 D1E3                <1> 	shl		bx, 1
   135 000004F8 81C3[8C05]          <1> 	add		bx, .t0
   136 000004FC FF37E8C3FB83C402    <1> 	cdecl	puts, word [bx]
   137                              <1> 
   138                              <1> 	;; 【レジスタの復帰】
   139 00000504 5E                  <1> 	pop		si
   140 00000505 5B                  <1> 	pop		bx
   141                              <1> 
   142                              <1> 	;; 【スタックフレームの破棄】
   143                              <1> 
   144 00000506 89EC                <1> 	mov		sp, bp
   145 00000508 5D                  <1> 	pop		bp
   146                              <1> 
   147 00000509 C3                  <1> 	ret;
   148                              <1> 	
   149                              <1> 	;; データ
   150 0000050A 20                  <1> .s1:	db " "
   151 0000050B 5A5A5A5A5A5A5A5A5F  <1> .p2:	db "ZZZZZZZZ_"	
   152 00000514 5A5A5A5A5A5A5A5A20  <1> .p3:	db "ZZZZZZZZ "
   153 0000051D 5A5A5A5A5A5A5A5A5F  <1> .p4:	db "ZZZZZZZZ_"	
   154 00000526 5A5A5A5A5A5A5A5A20  <1> .p5:	db "ZZZZZZZZ "		
   155 0000052F 5A5A5A5A5A5A5A5A00  <1> .p6:	db "ZZZZZZZZ", 0
   156                              <1> 
   157 00000538 2028556E6B6E6F776E- <1> .s4:	db " (Unknown)", 0x0A, 0x0D, 0
   157 00000541 290A0D00            <1>
   158 00000545 2028757361626C6529- <1> .s5:	db " (usable)", 0x0A, 0x0D, 0
   158 0000054E 0A0D00              <1>
   159 00000551 202872657365727665- <1> .s6:	db " (reserved)", 0x0A, 0x0D, 0
   159 0000055A 64290A0D00          <1>
   160 0000055F 202841435049206461- <1> .s7:	db " (ACPI data)", 0x0A, 0x0D, 0
   160 00000568 7461290A0D00        <1>
   161 0000056E 202841435049204E56- <1> .s8:	db " (ACPI NVS)", 0x0A, 0x0D, 0
   161 00000577 53290A0D00          <1>
   162 0000057C 2028626164206D656D- <1> .s9:	db " (bad memory)", 0x0A, 0x0D, 0
   162 00000585 6F7279290A0D00      <1>
   163                              <1> 
   164 0000058C [3805][4505][5105]- <1> .t0:	dw .s4, .s5, .s6, .s7, .s8, .s9, .s4, .s4
   164 00000592 [5F05][6E05][7C05]- <1>
   164 00000598 [3805][3805]        <1>
    87                                  %include "../modules/real/kbc.s"
     1                              <1> KBC_Data_Write:
     2                              <1> 	;; 【スタックフレームの構築】
     3                              <1> 
     4 0000059C 55                  <1> 	push	bp
     5 0000059D 89E5                <1> 	mov		bp, sp
     6                              <1> 
     7                              <1> 	;; 【レジスタの保存】
     8                              <1> 
     9 0000059F 51                  <1> 	push	cx
    10                              <1> 
    11 000005A0 B90000              <1> 	mov		cx, 0
    12                              <1> 
    13                              <1> .10L:
    14                              <1> 	
    15 000005A3 E464                <1> 	in		al, 0x64			;KBCステータス
    16 000005A5 A802                <1> 	test	al, 0x02
    17 000005A7 E0FA                <1> 	loopnz	.10L
    18                              <1> 
    19 000005A9 83F900              <1> 	cmp		cx, 0
    20 000005AC 7405                <1> 	jz		.20E
    21                              <1> 
    22 000005AE 8A4604              <1> 	mov		al, [bp + 4]
    23 000005B1 E660                <1> 	out		0x60, al
    24                              <1> .20E:
    25                              <1> 	
    26 000005B3 89C8                <1> 	mov		ax, cx
    27                              <1> 
    28                              <1> 	;; 【レジスタの復帰】
    29                              <1> 
    30 000005B5 59                  <1> 	pop		cx
    31                              <1> 
    32                              <1> 	;; 【スタックフレームの破棄】
    33                              <1> 
    34 000005B6 89EC                <1> 	mov		sp, bp
    35 000005B8 5D                  <1> 	pop		bp
    36                              <1> 
    37 000005B9 C3                  <1> 	ret
    38                              <1> 
    39                              <1> KBC_Data_Read:
    40                              <1> 	;; 【スタックフレームの構築】
    41                              <1> 
    42 000005BA 55                  <1> 	push	bp
    43 000005BB 89E5                <1> 	mov		bp, sp
    44                              <1> 
    45                              <1> 	;; 【レジスタの保存】
    46                              <1> 
    47 000005BD 51                  <1> 	push	cx
    48                              <1> 
    49 000005BE B90000              <1> 	mov		cx, 0
    50                              <1> 
    51                              <1> .10L:
    52                              <1> 	
    53 000005C1 E464                <1> 	in		al, 0x64			;KBCステータス
    54 000005C3 A801                <1> 	test	al, 0x01
    55 000005C5 E0FA                <1> 	loopnz	.10L
    56                              <1> 
    57 000005C7 83F900              <1> 	cmp		cx, 0
    58 000005CA 7409                <1> 	jz		.20E
    59                              <1> 
    60 000005CC B400                <1> 	mov		ah, 0x00
    61 000005CE E460                <1> 	in		al, 0x60
    62                              <1> 	
    63 000005D0 8B7E04              <1> 	mov		di, [bp + 4]
    64 000005D3 8905                <1> 	mov		[di + 0], ax
    65                              <1> .20E:
    66                              <1> 	
    67 000005D5 89C8                <1> 	mov		ax, cx
    68                              <1> 
    69                              <1> 	;; 【レジスタの復帰】
    70                              <1> 
    71 000005D7 59                  <1> 	pop		cx
    72                              <1> 
    73                              <1> 	;; 【スタックフレームの破棄】
    74                              <1> 
    75 000005D8 89EC                <1> 	mov		sp, bp
    76 000005DA 5D                  <1> 	pop		bp
    77                              <1> 
    78 000005DB C3                  <1> 	ret
    79                              <1> 
    80                              <1> KBC_Cmd_Write:
    81                              <1> 		;; 【スタックフレームの構築】
    82                              <1> 
    83 000005DC 55                  <1> 	push	bp
    84 000005DD 89E5                <1> 	mov		bp, sp
    85                              <1> 
    86                              <1> 	;; 【レジスタの保存】
    87                              <1> 
    88 000005DF 51                  <1> 	push	cx
    89                              <1> 
    90 000005E0 B90000              <1> 	mov		cx, 0
    91                              <1> 
    92                              <1> .10L:
    93                              <1> 	
    94 000005E3 E464                <1> 	in		al, 0x64			;KBCステータス
    95 000005E5 A802                <1> 	test	al, 0x02
    96 000005E7 E0FA                <1> 	loopnz	.10L
    97                              <1> 
    98 000005E9 83F900              <1> 	cmp		cx, 0
    99 000005EC 7405                <1> 	jz		.20E
   100                              <1> 
   101 000005EE 8A4604              <1> 	mov		al, [bp + 4]
   102 000005F1 E664                <1> 	out		0x64, al
   103                              <1> .20E:
   104                              <1> 	
   105 000005F3 89C8                <1> 	mov		ax, cx
   106                              <1> 
   107                              <1> 	;; 【レジスタの復帰】
   108                              <1> 
   109 000005F5 59                  <1> 	pop		cx
   110                              <1> 
   111                              <1> 	;; 【スタックフレームの破棄】
   112                              <1> 
   113 000005F6 89EC                <1> 	mov		sp, bp
   114 000005F8 5D                  <1> 	pop		bp
   115                              <1> 
   116 000005F9 C3                  <1> 	ret
    88                                  %include "../modules/real/read_lba.s"
     1                              <1> lba_chs:
     2                              <1> 		;---------------------------------------
     3                              <1> 		; 【スタックフレームの構築】
     4                              <1> 		;---------------------------------------
     5                              <1> 												; ------|--------
     6                              <1> 												;    + 8| LBA（2バイト）
     7                              <1> 												;    + 6| drv_chsドライブ情報
     8                              <1> 												;    + 4| driveドライブ情報
     9                              <1> 												; ------+--------
    10                              <1> 												;    + 2| IP（戻り番地）
    11 000005FA 55                  <1> 		push	bp								;  BP+ 0| BP（元の値）
    12 000005FB 89E5                <1> 		mov		bp, sp							; ------+--------
    13                              <1> 
    14                              <1> 		;---------------------------------------
    15                              <1> 		; 【レジスタの保存】
    16                              <1> 		;---------------------------------------
    17 000005FD 50                  <1> 		push	ax
    18 000005FE 53                  <1> 		push	bx
    19 000005FF 52                  <1> 		push	dx
    20 00000600 56                  <1> 		push	si
    21 00000601 57                  <1> 		push	di
    22                              <1> 
    23                              <1> 		;---------------------------------------
    24                              <1> 		; 【処理の開始】
    25                              <1> 		;---------------------------------------
    26 00000602 8B7604              <1> 		mov		si, [bp + 4]					; SI  = driveバッファ;
    27 00000605 8B7E06              <1> 		mov		di, [bp + 6]					; DI  = drv_chsバッファ;
    28                              <1> 
    29                              <1> 		; シリンダあたりのセクタ数を計算（ヘッド数×セクタ数）
    30 00000608 8A4404              <1> 		mov		al,  [si + drive.head]			; AL = 最大ヘッド数;
    31 0000060B F66406              <1> 		mul		byte [si + drive.sect]			; AX = 最大ヘッド数 * 最大セクタ数;
    32 0000060E 89C3                <1> 		mov		bx, ax							; BX = シリンダあたりのセクタ数;
    33                              <1> 
    34                              <1> 		; シリンダ番号を取得するために
    35                              <1> 		; LBAをシリンダあたりのセクタ数で除算
    36 00000610 BA0000              <1> 		mov		dx, 0							; DX = LBA（上位2バイト）
    37 00000613 8B4608              <1> 		mov		ax,  [bp + 8]					; AX = LBA（下位2バイト）
    38 00000616 F7F3                <1> 		div		bx								; DX = DX:AX % BX; // 残り
    39                              <1> 												; AX = DX:AX / BX; // シリンダ番号
    40                              <1> 
    41 00000618 894502              <1> 		mov		[di + drive.cyln], ax			; drv_chs.cyln = シリンダ番号;
    42                              <1> 
    43                              <1> 		; ヘッド位置を取得するために
    44                              <1> 		; あまりをトラックあたりのセクタ数で除算
    45 0000061B 89D0                <1> 		mov		ax, dx							; AX = 残り
    46 0000061D F67406              <1> 		div		byte [si + drive.sect]			; AH = AX % 最大セクタ数; // セクタ番号
    47                              <1> 												; AL = AX / 最大セクタ数; // ヘッド番号
    48                              <1> 
    49 00000620 0FB6D4              <1> 		movzx	dx, ah							; DX = セクタ番号
    50 00000623 42                  <1> 		inc		dx								; （セクタは1始まりなので+1）
    51                              <1> 
    52 00000624 B400                <1> 		mov		ah, 0x00						; AX = ヘッド位置
    53                              <1> 
    54 00000626 894504              <1> 		mov		[di + drive.head], ax			; drv_chs.head = ヘッド番号;
    55 00000629 895506              <1> 		mov		[di + drive.sect], dx			; drv_chs.sect = セクタ番号;
    56                              <1> 
    57                              <1> 		;---------------------------------------
    58                              <1> 		; 【レジスタの復帰】
    59                              <1> 		;---------------------------------------
    60 0000062C 5F                  <1> 		pop		di
    61 0000062D 5E                  <1> 		pop		si
    62 0000062E 5A                  <1> 		pop		dx
    63 0000062F 5B                  <1> 		pop		bx
    64 00000630 58                  <1> 		pop		ax
    65                              <1> 
    66                              <1> 		;---------------------------------------
    67                              <1> 		; 【スタックフレームの破棄】
    68                              <1> 		;---------------------------------------
    69 00000631 89EC                <1> 		mov		sp, bp
    70 00000633 5D                  <1> 		pop		bp
    71                              <1> 
    72 00000634 C3                  <1> 		ret
    73                              <1> 
    74                              <1> read_lba:
    75                              <1> 		;---------------------------------------
    76                              <1> 		; 【スタックフレームの構築】
    77                              <1> 		;---------------------------------------
    78                              <1> 												; ------|--------
    79                              <1> 												;    +10| コピー先
    80                              <1> 												;    + 8| セクタ数
    81                              <1> 												;    + 6| LBA（2バイト）
    82                              <1> 												;    + 4| ドライブ情報
    83                              <1> 												; ------+--------
    84                              <1> 												;    + 2| IP（戻り番地）
    85 00000635 55                  <1> 		push	bp								;  BP+ 0| BP（元の値）
    86 00000636 89E5                <1> 		mov		bp, sp							; ------+--------
    87                              <1> 
    88                              <1> 		;---------------------------------------
    89                              <1> 		; 【レジスタの保存】
    90                              <1> 		;---------------------------------------
    91 00000638 56                  <1> 		push	si
    92                              <1> 
    93                              <1> 		;---------------------------------------
    94                              <1> 		; 【処理の開始】
    95                              <1> 		;---------------------------------------
    96 00000639 8B7604              <1> 		mov		si, [bp + 4]					; SI = ドライブ情報;
    97                              <1> 
    98                              <1> 		;---------------------------------------
    99                              <1> 		; LBA→CHS変換
   100                              <1> 		;---------------------------------------
   101 0000063C 8B4606              <1> 		mov		ax, [bp + 6]					; AX = LBA;
   102 0000063F 5068[6406]56E8B3FF- <1> 		cdecl	lba_chs, si, .chs, ax			; lba_chs(drive, .chs, AX);
   102 00000647 83C406              <1>
   103                              <1> 
   104                              <1> 		;---------------------------------------
   105                              <1> 		; ドライブ番号のコピー
   106                              <1> 		;---------------------------------------
   107 0000064A 8A04                <1> 		mov		al, [si + drive.no]				; 
   108 0000064C A2[6406]            <1> 		mov		[.chs + drive.no], al			; ドライブ番号
   109                              <1> 
   110                              <1> 		;---------------------------------------
   111                              <1> 		; セクタの読み込み
   112                              <1> 		;---------------------------------------
   113 0000064F FF760AFF760868-     <1> 		cdecl	read_chs, .chs, word [bp + 8], word [bp +10]
   113 00000656 [6406]E8C7FA83C406  <1>
   114                              <1> 												; AX = read_chs(.chs, セクタ数, ofs);
   115                              <1> 
   116                              <1> 		;---------------------------------------
   117                              <1> 		; 【レジスタの復帰】
   118                              <1> 		;---------------------------------------
   119 0000065E 5E                  <1> 		pop		si
   120                              <1> 
   121                              <1> 		;---------------------------------------
   122                              <1> 		; 【スタックフレームの破棄】
   123                              <1> 		;---------------------------------------
   124 0000065F 89EC                <1> 		mov		sp, bp
   125 00000661 5D                  <1> 		pop		bp
   126                              <1> 
   127 00000662 C3                  <1> 		ret
   128                              <1> 
   129 00000663 90                  <1> ALIGN 2
   130 00000664 00<rept>            <1> .chs:	times drive_size	db	0				; 読み込みセクタに関する情報
    89                                  
    90                                  
    91                                  ;;ブート処理第２ステージ
    92                                  stage_2:
    93 0000066C 68[E606]E852FA83C4-     	cdecl 	puts, .s0
    93 00000674 02                 
    94                                  
    95                                  	;; ドライブ情報を取得
    96 00000675 68[BC00]E811FC83C4-     	cdecl	get_drive_param, BOOT
    96 0000067D 02                 
    97 0000067E 83F800                  	cmp		ax, 0
    98                                  .10Q:
    99 00000681 750C                    	jne		.10E
   100                                  .10T:
   101 00000683 68[1C07]E83BFA83C4-     	cdecl	puts, .e0
   101 0000068B 02                 
   102 0000068C E854FA                  	call	reboot
   103                                  .10E:
   104                                  
   105                                  	;; ドライブ情報を表示
   106 0000068F A1[BC00]                	mov		ax, [BOOT + drive.no]
   107 00000692 6A046A106A0268-         	cdecl	itoa, ax, .p1, 2, 16, 0b0100
   107 00000699 [FD06]50E86DFB83C4-
   107 000006A1 0A                 
   108 000006A2 A1[BE00]                	mov		ax, [BOOT + drive.cyln]
   109 000006A5 6A046A106A0468-         	cdecl	itoa, ax, .p2, 4, 16, 0b0100
   109 000006AC [0507]50E85AFB83C4-
   109 000006B4 0A                 
   110 000006B5 A1[C000]                	mov		ax, [BOOT + drive.head]
   111 000006B8 6A046A106A0268-         	cdecl	itoa, ax, .p3, 2, 16, 0b0100
   111 000006BF [0F07]50E847FB83C4-
   111 000006C7 0A                 
   112 000006C8 A1[C200]                	mov		ax, [BOOT + drive.sect]
   113 000006CB 6A046A106A0268-         	cdecl	itoa, ax, .p4, 2, 16, 0b0100
   113 000006D2 [1707]50E834FB83C4-
   113 000006DA 0A                 
   114 000006DB 68[F506]E8E3F983C4-     	cdecl	puts, .s1
   114 000006E3 02                 
   115                                  
   116                                  	;; 【次のステージへ移行】
   117 000006E4 EB51                    	jmp		stage_3rd
   118                                  
   119                                  	;; データ
   120 000006E6 326E64207374616765-     .s0		db "2nd stage...", 0x0A, 0x0D, 0
   120 000006EF 2E2E2E0A0D00       
   121 000006F5 44726976653A3078        .s1		db "Drive:0x"
   122 000006FD 20202C20433A3078        .p1		db "  , C:0x"
   123 00000705 202020202C20483A30-     .p2		db "    , H:0x"
   123 0000070E 78                 
   124 0000070F 20202C20533A3078        .p3		db "  , S:0x"
   125 00000717 20200A0D00              .p4		db "  ", 0x0A, 0x0D, 0
   126                                  
   127 0000071C 43616E277420676574-     .e0		db "Can't get drive parameter.", 0
   127 00000725 206472697665207061-
   127 0000072E 72616D657465722E00 
   128                                  
   129                                  stage_3rd:
   130                                  	;; 文字を表示
   131 00000737 68[B507]E887F983C4-     	cdecl	puts, .s0
   131 0000073F 02                 
   132                                  
   133                                  	;; プロテクトモードで使用するフォントは、BIOSのものを流用
   134                                  
   135 00000740 68[0002]E887FB83C4-     	cdecl	get_font_adr, FONT
   135 00000748 02                 
   136                                  
   137                                  	;; フォントアドレスの表示
   138                                  
   139 00000749 6A046A106A0468-         	cdecl	itoa, word	[FONT.seg], .p1, 4, 16, 0b0100
   139 00000750 [D307]FF36[0002]E8-
   139 00000757 B3FA83C40A         
   140 0000075C 6A046A106A0468-         	cdecl	itoa, word	[FONT.off], .p2, 4, 16, 0b0100
   140 00000763 [D807]FF36[0202]E8-
   140 0000076A A0FA83C40A         
   141 0000076F 68[C407]E84FF983C4-     	cdecl	puts, .s1
   141 00000777 02                 
   142                                  
   143                                  	;; メモリ情報の取得と表示
   144                                  
   145 00000778 E872FB                  	cdecl	get_mem_info
   146                                  
   147 0000077B 66A1[0402]              	mov		eax, [ACPI_DATA.adr]
   148 0000077F 6683F800                	cmp		eax, 0
   149 00000783 742E                    	je		.10E
   150                                  
   151 00000785 6A046A106A0468-         	cdecl	itoa, ax, .p4, 4, 16, 0b0100
   151 0000078C [F407]50E87AFA83C4-
   151 00000794 0A                 
   152 00000795 66C1E810                	shr		eax, 16
   153 00000799 6800016A106A0468-       	cdecl	itoa, ax, .p3, 4, 16, 0x0100
   153 000007A1 [EF07]50E865FA83C4-
   153 000007A9 0A                 
   154 000007AA 68[E207]E814F983C4-     	cdecl	puts, .s2
   154 000007B2 02                 
   155                                  
   156                                  .10E:
   157                                  	
   158                                  	;; 処理の終了
   159 000007B3 EB46                    	jmp		stage_4				;while(1)
   160                                  
   161                                  	;; データ
   162 000007B5 337264207374616765-     	.s0		db	"3rd stage...", 0x0A, 0x0D, 0
   162 000007BE 2E2E2E0A0D00       
   163                                  
   164 000007C4 466F6E742041646472-     	.s1:	db 	"Font Address = "
   164 000007CD 657373203D20       
   165 000007D3 5A5A5A5A3A              	.p1:	db	"ZZZZ:"
   166 000007D8 5A5A5A5A0A0D00          	.p2:	db	"ZZZZ", 0x0A, 0x0D, 0
   167 000007DF 0A0D00                  			db	0x0A, 0x0D, 0
   168                                  
   169 000007E2 204143504920646174-     	.s2		db " ACPI data = "
   169 000007EB 61203D20           
   170 000007EF 5A5A5A5A3A              	.p3		db "ZZZZ:"
   171 000007F4 5A5A5A5A0A0D00          	.p4		db "ZZZZ", 0x0A, 0x0D, 0
   172                                  
   173                                  stage_4:
   174                                  	;; 文字列を表示
   175 000007FB 68[BD08]E8C3F883C4-     	cdecl 	puts, .s0
   175 00000803 02                 
   176                                  
   177                                  	;; A20 ゲートの有効化
   178 00000804 FA                      	cli
   179 00000805 68AD00E8D1FD83C402      	cdecl	KBC_Cmd_Write, 0xAD
   180                                  
   181 0000080E 68[0409]E8A6FD83C4-     	cdecl	KBC_Data_Read, .key
   181 00000816 02                 
   182                                  
   183 00000817 8A1E[0409]              	mov		bl, [.key]
   184 0000081B 80CB02                  	or		bl, 0x02
   185                                  
   186 0000081E 68D100E8B8FD83C402      	cdecl	KBC_Cmd_Write, 0xD1
   187 00000827 53E871FD83C402          	cdecl	KBC_Data_Write,bx
   188                                  
   189 0000082E 68AE00E8A8FD83C402      	cdecl	KBC_Cmd_Write, 0xAE
   190                                  
   191 00000837 FB                      	sti
   192                                  
   193                                  	;; 文字列を表示
   194 00000838 68[CC08]E886F883C4-     	cdecl	puts, .s1
   194 00000840 02                 
   195                                  
   196                                  	;; キーボードLEDのテスト
   197 00000841 BB0000                  	mov		bx, 0				;cx = LEDの初期値
   198                                  
   199                                  .10L:
   200                                  
   201 00000844 B400                    	mov 	ah, 0x00
   202 00000846 CD16                    	int		0x16				;AL = BIOS(0x16, 0x00)
   203                                  
   204 00000848 3C31                    	cmp		al, '1'
   205 0000084A 7266                    	jb		.10E
   206                                  
   207 0000084C 3C33                    	cmp		al, '3'
   208 0000084E 7762                    	ja		.10E
   209                                  
   210 00000850 88C1                    	mov		cl, al
   211 00000852 FEC9                    	dec		cl
   212 00000854 80E103                  	and		cl, 0x03
   213 00000857 B80100                  	mov		ax, 0x0001
   214 0000085A D3E0                    	shl		ax, cl
   215 0000085C 31C3                    	xor		bx, ax
   216                                  
   217                                  	;; LEDコマンドの送信
   218 0000085E FA                      	cli
   219                                  
   220 0000085F 68AD00E877FD83C402      	cdecl	KBC_Cmd_Write, 0xAD
   221                                  
   222 00000868 68ED00E82EFD83C402      	cdecl	KBC_Data_Write, 0xED
   223 00000871 68[0409]E843FD83C4-     	cdecl	KBC_Data_Read, .key
   223 00000879 02                 
   224                                  
   225 0000087A 803E[0409]FA            	cmp		[.key], byte 0xFA
   226 0000087F 7509                    	jne		.11F
   227                                  
   228 00000881 53E817FD83C402          	cdecl	KBC_Data_Write, bx
   229                                  
   230 00000888 EB1C                    	jmp		.11E
   231                                  .11F:
   232 0000088A 6A046A106A0268-         	cdecl	itoa, word [.key], .e1, 2, 16, 0b0100
   232 00000891 [0009]FF36[0409]E8-
   232 00000898 72F983C40A         
   233 0000089D 68[FF08]E821F883C4-     	cdecl	puts, .e0
   233 000008A5 02                 
   234                                  .11E:
   235                                  
   236 000008A6 68AE00E830FD83C402      	cdecl	KBC_Cmd_Write, 0xAE
   237                                  
   238 000008AF FB                      	sti
   239                                  
   240 000008B0 EB92                    	jmp		.10L
   241                                  .10E:
   242                                  	
   243                                  	;; 文字列を表示
   244 000008B2 68[F608]E80CF883C4-     	cdecl 	puts, .s3
   244 000008BA 02                 
   245                                  	
   246                                  	;; 処理の終了
   247 000008BB EB49                    	jmp		stage_5
   248                                  
   249 000008BD 347468207374616765-     .s0:		db	"4th stage...", 0x0A, 0x0D, 0 
   249 000008C6 2E2E2E0A0D00       
   250 000008CC 204132302047617465-     .s1:		db	" A20 Gate Enabled.", 0x0A, 0x0D, 0	
   250 000008D5 20456E61626C65642E-
   250 000008DE 0A0D00             
   251 000008E1 4B6579626F61726420-     .s2:		db	"Keyboard LED Test...", 0
   251 000008EA 4C454420546573742E-
   251 000008F3 2E2E00             
   252 000008F6 28646F6E65290A0D00      .s3:		db 	"(done)", 0x0A, 0x0D, 0
   253 000008FF 5B                      .e0:		db	"["
   254 00000900 5A5A5D00                .e1:		db 	"ZZ]", 0
   255                                  	
   256 00000904 0000                    .key:	dw	0
   257                                  
   258                                  ;;第５ステージ（カーネルのロード)
   259                                  stage_5:
   260                                  	;; 文字列を表示
   261 00000906 68[3209]E8B8F783C4-     	cdecl	puts, .s0
   261 0000090E 02                 
   262                                  
   263                                  	;; カーネルを読み込む
   264 0000090F 68009C6A106A1068-       	cdecl	read_lba, BOOT, BOOT_SECT, KERNEL_SECT, BOOT_END
   264 00000917 [BC00]E819FD83C408 
   265                                  
   266 0000091F 83F810                  	cmp		ax, KERNEL_SECT
   267                                  .10Q:
   268 00000922 740C                    	jz		.10E
   269                                  .10T:
   270 00000924 68[4109]E89AF783C4-     	cdecl	puts, .e0
   270 0000092C 02                 
   271 0000092D E8B3F7                  	call	reboot
   272                                  .10E:
   273                                  
   274                                  	;; 処理の終了
   275 00000930 EB29                    	jmp		stage_6
   276                                  
   277 00000932 357468207374616765-     .s0			db 	"5th stage...", 0x0A, 0x0D, 0
   277 0000093B 2E2E2E0A0D00       
   278 00000941 204661696C75726520-     .e0			db 	" Failure load kernel...", 0x0A, 0x0D, 0
   278 0000094A 6C6F6164206B65726E-
   278 00000953 656C2E2E2E0A0D00   
   279                                  
   280                                  ;;第６ステージ
   281                                  stage_6:
   282                                  	;; 文字列を表示
   283 0000095B 68[7309]E863F783C4-     	cdecl	puts, .s0
   283 00000963 02                 
   284                                  
   285                                  	;; ユーザからの入力町
   286                                  .10L:
   287                                  
   288 00000964 B400                    	mov		ah, 0x00
   289 00000966 CD16                    	int		0x16
   290 00000968 3C20                    	cmp		al, ' '
   291 0000096A 75F8                    	jne		.10L
   292                                  
   293                                  	;; ビデオモードの設定
   294 0000096C B81200                  	mov		ax, 0x0012			;VGA 640 x 480
   295 0000096F CD10                    	int		0x10				;BIOS(0x10, 0x12)
   296                                  
   297                                  	;; 処理の終了
   298 00000971 EBFE                    	jmp		$
   299                                  
   300 00000973 367468207374616765-     .s0			db	"6th stage...", 0x0A, 0x0D, 0x0A, 0x0D
   300 0000097C 2E2E2E0A0D0A0D     
   301 00000983 205B50757368205350-     			db	" [Push SPACE key to protect mode ...]", 0x0A, 0x0D, 0
   301 0000098C 414345206B65792074-
   301 00000995 6F2070726F74656374-
   301 0000099E 206D6F6465202E2E2E-
   301 000009A7 5D0A0D00           
   302                                  
   303                                  ;; パディング（このファイルは8kバイトとする）
   304 000009AB 00<rept>                	times BOOT_SIZE - ($ - $$)		db	0
