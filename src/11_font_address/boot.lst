     1                                  	;; 【マクロ】
     2                                  %include	"../include/define.s"
     1                              <1> 	BOOT_LOAD	equ		0x7C00	;ブートプログラムのロード位置
     2                              <1> 	BOOT_SIZE	equ		(1024 * 8) ;ブートコードサイズ
     3                              <1> 	SECT_SIZE	equ		(512)	   ;セクタサイズ
     4                              <1> 	BOOT_SECT	equ		(BOOT_SIZE / SECT_SIZE) ;ブートプログラムのセクタ数
     5                              <1> 	
     6                              <1> 	
     3                                  %include	"../include/macro.s"
     1                              <1> %macro	cdecl	1-*.nolist
     2                              <1> 
     3                              <1> 	%rep	%0 - 1
     4                              <1> 		push	%{-1:-1}
     5                              <1> 		%rotate -1
     6                              <1> 	%endrep
     7                              <1> 	%rotate -1
     8                              <1> 
     9                              <1> 
    10                              <1> 		call	%1
    11                              <1> 
    12                              <1> 	%if	1 < %0
    13                              <1> 		add		sp, (__BITS__ >> 3) * (%0 - 1)
    14                              <1> 	%endif
    15                              <1> 
    16                              <1> %endmacro
    17                              <1> 
    18                              <1> 	
    19                              <1> struc drive
    20 00000000 <res 00000002>      <1> 		.no				resw	1				; ドライブ番号
    21 00000002 <res 00000002>      <1> 		.cyln			resw	1				; C:シリンダ
    22 00000004 <res 00000002>      <1> 		.head			resw	1				; H:ヘッド
    23 00000006 <res 00000002>      <1> 		.sect			resw	1				; S:セクタ
    24                              <1> endstruc
     4                                  	
     5                                  	ORG		BOOT_LOAD
     6                                  
     7                                  ;;【エントリポイント】 
     8                                  entry:
     9 00000000 EB58                    	jmp	ipl						;IPLへジャンプ
    10                                  	;; BPB(Bios Parameter Block)
    11                                  
    12 00000002 90<rept>                	times 90 - ($ - $$) db 0x90
    13                                  
    14                                  	;; IPL(Initial Program Loader)
    15                                  
    16                                  ipl:
    17 0000005A FA                      	cli							;割り込み禁止
    18                                  
    19 0000005B B80000                  	mov	ax, 0x000				;AX = 0x0000
    20 0000005E 8ED8                    	mov ds, ax					;DS = 0x0000
    21 00000060 8EC0                    	mov es, ax					;ES = 0x0000
    22 00000062 8ED0                    	mov ss, ax					;SS = 0x0000
    23 00000064 BC007C                  	mov sp, BOOT_LOAD			;SP = 0x7C00
    24                                  
    25 00000067 FB                      	sti							;割り込み許可
    26                                  
    27 00000068 8816[BC00]              	mov [BOOT + drive.no], dl		;ブートドライブ
    28                                  
    29                                  	;; 【文字列を表示】
    30 0000006C 68[9900]E8520083C4-     	cdecl	puts, .s0
    30 00000074 02                 
    31                                  
    32                                  	;;残りのセクタをすべて読み込む
    33 00000075 BB0F00                  	mov		bx, BOOT_SECT - 1	;BX = 残りのブートセクタ数
    34 00000078 B9007E                  	mov		cx, BOOT_LOAD + SECT_SIZE ;CX = 次のロードアドレス
    35                                  
    36 0000007B 515368[BC00]E89F00-     	cdecl	read_chs, BOOT, bx, cx
    36 00000083 83C406             
    37                                  
    38 00000086 39D8                    	cmp		ax, bx
    39                                  .10Q:
    40 00000088 740C                    	jz		.10E
    41                                  .10T:
    42 0000008A 68[AA00]E8340083C4-     	cdecl	puts, .e0
    42 00000092 02                 
    43 00000093 E84D00                  	call	reboot
    44                                  .10E:
    45                                  
    46                                  	;; 次のステージへ移行
    47                                  	
    48 00000096 E94C02                  	jmp		stage_2
    49                                  	
    50                                  	;; 【データ】
    51 00000099 4E6F7720426F6F7469-     .s0		db "Now Booting...", 0x0A, 0x0D, 0
    51 000000A2 6E672E2E2E0A0D00   
    52 000000AA 4572726F723A736563-     .e0		db "Error:sector read", 0
    52 000000B3 746F72207265616400 
    53                                  
    54                                  ;; ブートドライブに関する情報
    55                                  ALIGN	2, db 0
    56                                  BOOT:
    57                                  	istruc	drive
    58 000000BC 0000                    		at	drive.no,	dw	0
    59 000000BE 0000                    		at	drive.cyln,	dw	0
    60 000000C0 0000                    		at	drive.head,	dw	0
    61 000000C2 0200                    		at	drive.sect,	dw	2
    62                                  	iend
    63                                  	
    64                                  ;; 【モジュール】
    65                                  %include "../modules/real/puts.s"
     1                              <1> puts:
     2 000000C4 55                  <1> 	push	bp
     3 000000C5 89E5                <1> 	mov		bp, sp
     4                              <1> 
     5                              <1> 	;; 【レジスタの保存】
     6 000000C7 50                  <1> 	push	ax
     7 000000C8 53                  <1> 	push	bx
     8 000000C9 56                  <1> 	push	si
     9                              <1> 
    10                              <1> 	;; 【引数を取得】
    11 000000CA 8B7604              <1> 	mov		si,	[bp + 4]
    12                              <1> 
    13                              <1> 
    14                              <1> 	;; 【処理の開始】
    15 000000CD B40E                <1> 	mov		ah, 0x0E
    16 000000CF BB0000              <1> 	mov		bx, 0x0000
    17 000000D2 FC                  <1> 	cld							;DF = 0アドレス加算
    18                              <1> 
    19                              <1> .10L:
    20 000000D3 AC                  <1> 	lodsb
    21                              <1> 
    22 000000D4 3C00                <1> 	cmp		al, 0
    23 000000D6 7404                <1> 	je		.10E
    24                              <1> 
    25 000000D8 CD10                <1> 	int		0x10
    26 000000DA EBF7                <1> 	jmp		.10L
    27                              <1> .10E:
    28                              <1> 
    29 000000DC 5E                  <1> 	pop		si
    30 000000DD 5B                  <1> 	pop		bx
    31 000000DE 58                  <1> 	pop		ax
    32                              <1> 
    33 000000DF 89EC                <1> 	mov 	sp, bp
    34 000000E1 5D                  <1> 	pop		bp
    35                              <1> 
    36 000000E2 C3                  <1> 	ret
    66                                  %include "../modules/real/reboot.s"
     1                              <1> reboot:
     2                              <1> 	;; メッセージ表示
     3 000000E3 68[FF00]E8DBFF83C4- <1> 	cdecl	puts, .s0
     3 000000EB 02                  <1>
     4                              <1> 
     5                              <1> 	;; 	キー入力
     6                              <1> 
     7                              <1> .10L:
     8 000000EC B410                <1> 	mov		ah, 0x10
     9 000000EE CD16                <1> 	int		0x16
    10                              <1> 
    11 000000F0 3C20                <1> 	cmp		al, ' '
    12 000000F2 75F8                <1> 	jne		.10L
    13                              <1> 
    14                              <1> 	;; 改行出力
    15 000000F4 68[1D01]E8CAFF83C4- <1> 	cdecl	puts, .s1
    15 000000FC 02                  <1>
    16                              <1> 
    17                              <1> 	;; 再起動
    18 000000FD CD19                <1> 	int		0x19				;BIOS(0x19)
    19                              <1> 
    20                              <1> 	;; 文字データ
    21 000000FF 0A0D50757368205350- <1> .s0		db	0x0A, 0x0D, "Push SPACE key to reboot...", 0
    21 00000108 414345206B65792074- <1>
    21 00000111 6F207265626F6F742E- <1>
    21 0000011A 2E2E00              <1>
    22 0000011D 0A0D0A0D00          <1> .s1		db	0x0A, 0x0D, 0x0A, 0x0D, 0
    67                                  %include "../modules/real/read_chs.s"
     1                              <1> read_chs:
     2                              <1> 	;; スタックフレームの構築
     3                              <1> 
     4 00000122 55                  <1> 	push	bp
     5 00000123 89E5                <1> 	mov		bp, sp
     6 00000125 6A03                <1> 	push	3
     7 00000127 6A00                <1> 	push	0
     8                              <1> 
     9                              <1> 	;; レジスタの保存
    10 00000129 53                  <1> 	push	bx
    11 0000012A 51                  <1> 	push	cx
    12 0000012B 52                  <1> 	push	dx
    13 0000012C 06                  <1> 	push	es
    14 0000012D 56                  <1> 	push	si
    15                              <1> 
    16                              <1> 	;; 処理の開始
    17 0000012E 8B7604              <1> 	mov		si, [bp + 4]		;SI = SRCバッファ
    18                              <1> 
    19                              <1> 	;; CXレジスタの設定
    20                              <1> 	;; （BIOSコールの呼び出しに適した形に変換）
    21 00000131 8A6C02              <1> 	mov		ch, [si + drive.cyln + 0]
    22 00000134 8A4C03              <1> 	mov		cl, [si + drive.cyln + 1]
    23 00000137 C0E106              <1> 	shl		cl, 6
    24 0000013A 0A4C06              <1> 	or		cl, [si + drive.sect]
    25                              <1> 
    26                              <1> 	;; セクタの読み込み
    27 0000013D 8A7404              <1> 	mov		dh, [si + drive.head]
    28 00000140 8A14                <1> 	mov		dl, [si + 0]
    29 00000142 B80000              <1> 	mov		ax, 0x0000
    30 00000145 8EC0                <1> 	mov		es, ax
    31 00000147 8B5E08              <1> 	mov		bx, [bp + 8]
    32                              <1> .10L:
    33                              <1> 
    34 0000014A B402                <1> 	mov		ah, 0x02
    35 0000014C 8A4606              <1> 	mov		al, [bp + 6]
    36                              <1> 
    37 0000014F CD13                <1> 	int		0x13
    38 00000151 7304                <1> 	jnc		.11E
    39                              <1> 
    40 00000153 B000                <1> 	mov		al, 0
    41 00000155 EB0C                <1> 	jmp		.10E
    42                              <1> .11E:
    43                              <1> 
    44 00000157 3C00                <1> 	cmp		al, 0
    45 00000159 7508                <1> 	jne		.10E
    46                              <1> 
    47 0000015B B80000              <1> 	mov		ax, 0
    48 0000015E FF4EFE              <1> 	dec		word [bp - 2]
    49 00000161 75E7                <1> 	jnz		.10L
    50                              <1> 
    51                              <1> .10E:
    52 00000163 B400                <1> 	mov		ah, 0
    53                              <1> 
    54 00000165 5E                  <1> 	pop		si
    55 00000166 07                  <1> 	pop		es
    56 00000167 5A                  <1> 	pop		dx
    57 00000168 59                  <1> 	pop		cx
    58 00000169 5B                  <1> 	pop		bx
    59                              <1> 
    60                              <1> 
    61 0000016A 89EC                <1> 	mov		sp, bp
    62 0000016C 5D                  <1> 	pop		bp
    63                              <1> 
    64                              <1> 
    65 0000016D C3                  <1> 	ret
    66                              <1> 	
    68                                  
    69                                  	;; 【ブートフラグ】 
    70 0000016E 00<rept>                	times 510 - ($ - $$) db 0x00
    71 000001FE 55AA                    	db 0x55, 0xAA
    72                                  
    73                                  	;; リアルモード時に取得した情報
    74                                  FONT:							;フォント
    75 00000200 0000                    	.seg:	dw	0
    76 00000202 0000                    	.off:	dw	0
    77                                  
    78                                  ;;【モジュール（512バイト移行に配置）】 
    79                                  %include "../modules/real/itoa.s"	
     1                              <1> itoa:
     2                              <1> 	;; 【スタックフレームの構築】
     3                              <1> 
     4                              <1> 
     5 00000204 55                  <1> 	push	bp
     6 00000205 89E5                <1> 	mov		bp, sp
     7                              <1> 
     8                              <1> 
     9                              <1> 	;; 【レジスタの保存】
    10 00000207 50                  <1> 	push	ax
    11 00000208 53                  <1> 	push	bx
    12 00000209 51                  <1> 	push	cx
    13 0000020A 52                  <1> 	push	dx
    14 0000020B 56                  <1> 	push	si
    15 0000020C 57                  <1> 	push	di
    16                              <1> 
    17                              <1> 	;; 引数を取得
    18 0000020D 8B4604              <1> 	mov		ax, [bp + 4]		;val = 数値
    19 00000210 8B7606              <1> 	mov		si, [bp + 6]		;dst = バッファアドレス
    20 00000213 8B4E08              <1> 	mov		cx, [bp + 8]		;size = 残りバッファアサイズ
    21                              <1> 
    22 00000216 89F7                <1> 	mov		di, si
    23 00000218 01CF                <1> 	add		di, cx
    24 0000021A 4F                  <1> 	dec		di
    25                              <1> 
    26 0000021B 8B5E0C              <1> 	mov		bx, word [bp + 12]
    27                              <1> 
    28                              <1> 	;; 符号付き判定
    29 0000021E F7C30100            <1> 	test	bx, 0b0001
    30                              <1> .10Q:
    31 00000222 7408                <1> 	je		.10E
    32 00000224 83F800              <1> 	cmp		ax, 0
    33                              <1> .12Q:
    34 00000227 7D03                <1> 	jge		.12E
    35 00000229 83CB02              <1> 	or		bx, 0b0010
    36                              <1> .12E:
    37                              <1> .10E:	
    38                              <1> 
    39                              <1> 	;; 符号出力判定
    40 0000022C F7C30200            <1> 	test	bx, 0b0010
    41                              <1> .20Q:
    42 00000230 7410                <1> 	je		.20E
    43 00000232 83F800              <1> 	cmp		ax, 0
    44                              <1> .22Q:
    45 00000235 7D07                <1> 	jge		.22F
    46 00000237 F7D8                <1> 	neg		ax
    47 00000239 C6042D              <1> 	mov		[si], byte '-'
    48 0000023C EB03                <1> 	jmp		.22E
    49                              <1> .22F:
    50 0000023E C6042B              <1> 	mov		[si], byte '+'
    51                              <1> .22E:
    52 00000241 49                  <1> 	dec		cx
    53                              <1> .20E:
    54                              <1> 
    55                              <1> 	;; ASCII変換
    56                              <1> 
    57 00000242 8B5E0A              <1> 	mov		bx, [bp + 10]
    58                              <1> .30L:
    59 00000245 BA0000              <1> 	mov		dx, 0
    60 00000248 F7F3                <1> 	div		bx
    61                              <1> 
    62 0000024A 89D6                <1> 	mov		si, dx
    63 0000024C 8A94[7402]          <1> 	mov		dl, byte [.ascii + si] ;dl = Ascii[dx]
    64                              <1> 
    65 00000250 8815                <1> 	mov 	[di], dl
    66 00000252 4F                  <1> 	dec		di
    67                              <1> 
    68 00000253 83F800              <1> 	cmp		ax, 0
    69 00000256 E0ED                <1> 	loopnz	.30L
    70                              <1> 
    71                              <1> .30E:
    72                              <1> 
    73                              <1> 	;; 空欄を埋める
    74 00000258 83F900              <1> 	cmp		cx, 0
    75                              <1> .40Q:
    76 0000025B 740D                <1> 	je		.40E
    77 0000025D B020                <1> 	mov		al, ' '
    78 0000025F 837E0C04            <1> 	cmp		[bp + 12], word 0b0100
    79                              <1> .42Q:
    80 00000263 7502                <1> 	jne		.42E
    81 00000265 B030                <1> 	mov		al, '0'
    82                              <1> .42E:
    83 00000267 FD                  <1> 	std
    84 00000268 F3AA                <1> 	rep	stosb
    85                              <1> 
    86                              <1> .40E:
    87                              <1> 
    88                              <1> 
    89                              <1> 	;; 【レジウスタの復帰】
    90                              <1> 
    91 0000026A 5F                  <1> 	pop		di
    92 0000026B 5E                  <1> 	pop		si
    93 0000026C 5A                  <1> 	pop		dx
    94 0000026D 59                  <1> 	pop		cx
    95 0000026E 5B                  <1> 	pop		bx
    96 0000026F 58                  <1> 	pop		ax
    97                              <1> 
    98                              <1> 
    99                              <1> 	;; 【スタックフレームのは木】
   100 00000270 89EC                <1> 	mov		sp, bp
   101 00000272 5D                  <1> 	pop		bp
   102                              <1> 
   103 00000273 C3                  <1> 	ret
   104                              <1> 
   105 00000274 303132333435363738- <1> .ascii	db	"0123456789ABCDEF"
   105 0000027D 39414243444546      <1>
   106                              <1> 	
   107                              <1> 	
    80                                  %include "../modules/real/get_drive_param.s"
     1                              <1> get_drive_param:
     2                              <1> 	;; 【スタックフレームの構築】
     3                              <1> 
     4 00000284 55                  <1> 	push	bp
     5 00000285 89E5                <1> 	mov		bp, sp
     6                              <1> 
     7                              <1> 	;; 【レジスタの保存】
     8 00000287 53                  <1> 	push	bx
     9 00000288 51                  <1> 	push	cx
    10 00000289 06                  <1> 	push	es
    11 0000028A 56                  <1> 	push	si
    12 0000028B 57                  <1> 	push	di
    13                              <1> 
    14                              <1> 	;; 【処理の開始】
    15 0000028C 8B7604              <1> 	mov		si, [bp + 4]
    16                              <1> 
    17 0000028F B80000              <1> 	mov		ax, 0
    18 00000292 8EC0                <1> 	mov		es, ax
    19 00000294 89C7                <1> 	mov		di, ax
    20                              <1> 
    21 00000296 B408                <1> 	mov		ah, 8
    22 00000298 8A14                <1> 	mov		dl, [si + drive.no]
    23 0000029A CD13                <1> 	int		0x13
    24                              <1> .10Q:
    25 0000029C 721B                <1> 	jc		.10F
    26                              <1> .10T:
    27 0000029E 88C8                <1> 	mov		al, cl
    28 000002A0 83E03F              <1> 	and		ax, 0x3F
    29                              <1> 
    30 000002A3 C0E906              <1> 	shr		cl, 6
    31 000002A6 C1C908              <1> 	ror		cx, 8
    32 000002A9 41                  <1> 	inc		cx
    33                              <1> 
    34 000002AA 0FB6DE              <1> 	movzx	bx, dh
    35 000002AD 43                  <1> 	inc		bx
    36                              <1> 
    37 000002AE 894C02              <1> 	mov		[si + drive.cyln], cx
    38 000002B1 895C04              <1> 	mov		[si + drive.head], bx
    39 000002B4 894406              <1> 	mov		[si + drive.sect], ax
    40                              <1> 
    41 000002B7 EB03                <1> 	jmp		.10E
    42                              <1> 
    43                              <1> .10F:
    44                              <1> 
    45 000002B9 B80000              <1> 	mov		ax, 0
    46                              <1> 
    47                              <1> .10E:
    48                              <1> 
    49                              <1> 	;; 【レジスタの復帰】
    50                              <1> 
    51 000002BC 5F                  <1> 	pop		di
    52 000002BD 5E                  <1> 	pop		si
    53 000002BE 07                  <1> 	pop		es
    54 000002BF 59                  <1> 	pop		cx
    55 000002C0 5B                  <1> 	pop		bx
    56                              <1> 
    57                              <1> 	;; 【スタックフレームの破棄】
    58                              <1> 
    59 000002C1 89EC                <1> 	mov		sp, bp
    60 000002C3 5D                  <1> 	pop		bp
    61                              <1> 
    62 000002C4 C3                  <1> 	ret
    63                              <1> 	
    64                              <1> 	
    81                                  %include "../modules/real/get_font_adr.s"	
     1                              <1> get_font_adr:
     2                              <1> 	;; 【スタックフレームの構築】
     3                              <1> 
     4                              <1> 
     5 000002C5 55                  <1> 	push 	bp
     6 000002C6 89E5                <1> 	mov		bp, sp
     7                              <1> 
     8                              <1> 	;; 【レジスタの保存】
     9                              <1> 
    10 000002C8 50                  <1> 	push	ax
    11 000002C9 53                  <1> 	push	bx
    12 000002CA 56                  <1> 	push	si
    13 000002CB 06                  <1> 	push	es
    14 000002CC 55                  <1> 	push	bp
    15                              <1> 
    16                              <1> 	;; 引数を取得
    17                              <1> 
    18 000002CD 8B7604              <1> 	mov		si, [bp + 4]
    19                              <1> 
    20                              <1> 	;; フォントアドレスの取得
    21                              <1> 
    22 000002D0 B83011              <1> 	mov		ax, 0x1130
    23 000002D3 B706                <1> 	mov		bh, 0x06			; 8 x 16 font (vga/mcga)
    24 000002D5 CD10                <1> 	int		10h
    25                              <1> 	
    26                              <1> 	;; Font アドレスを保存
    27                              <1> 
    28 000002D7 8C04                <1> 	mov 	[si + 0], es
    29 000002D9 896C02              <1> 	mov		[si + 2], bp
    30                              <1> 
    31                              <1> 	;; 【レジスタの復帰】
    32                              <1> 
    33 000002DC 5D                  <1> 	pop		bp
    34 000002DD 07                  <1> 	pop		es
    35 000002DE 5E                  <1> 	pop		si
    36 000002DF 5B                  <1> 	pop		bx
    37 000002E0 58                  <1> 	pop		ax
    38                              <1> 
    39                              <1> 	;; 	【スタックフレームの破棄】
    40                              <1> 
    41 000002E1 89EC                <1> 	mov		sp, bp
    42 000002E3 5D                  <1> 	pop		bp
    43                              <1> 
    44                              <1> 
    45 000002E4 C3                  <1> 	ret
    46                              <1> 
    47                              <1> 	
    82                                  
    83                                  	
    84                                  		
    85                                  ;;ブート処理第２ステージ
    86                                  stage_2:
    87 000002E5 68[5F03]E8D9FD83C4-     	cdecl 	puts, .s0
    87 000002ED 02                 
    88                                  
    89                                  	;; ドライブ情報を取得
    90 000002EE 68[BC00]E890FF83C4-     	cdecl	get_drive_param, BOOT
    90 000002F6 02                 
    91 000002F7 83F800                  	cmp		ax, 0
    92                                  .10Q:
    93 000002FA 750C                    	jne		.10E
    94                                  .10T:
    95 000002FC 68[9503]E8C2FD83C4-     	cdecl	puts, .e0
    95 00000304 02                 
    96 00000305 E8DBFD                  	call	reboot
    97                                  .10E:
    98                                  
    99                                  	;; ドライブ情報を表示
   100 00000308 A1[BC00]                	mov		ax, [BOOT + drive.no]
   101 0000030B 6A046A106A0268-         	cdecl	itoa, ax, .p1, 2, 16, 0b0100
   101 00000312 [7603]50E8ECFE83C4-
   101 0000031A 0A                 
   102 0000031B A1[BE00]                	mov		ax, [BOOT + drive.cyln]
   103 0000031E 6A046A106A0468-         	cdecl	itoa, ax, .p2, 4, 16, 0b0100
   103 00000325 [7E03]50E8D9FE83C4-
   103 0000032D 0A                 
   104 0000032E A1[C000]                	mov		ax, [BOOT + drive.head]
   105 00000331 6A046A106A0268-         	cdecl	itoa, ax, .p3, 2, 16, 0b0100
   105 00000338 [8803]50E8C6FE83C4-
   105 00000340 0A                 
   106 00000341 A1[C200]                	mov		ax, [BOOT + drive.sect]
   107 00000344 6A046A106A0268-         	cdecl	itoa, ax, .p4, 2, 16, 0b0100
   107 0000034B [9003]50E8B3FE83C4-
   107 00000353 0A                 
   108 00000354 68[6E03]E86AFD83C4-     	cdecl	puts, .s1
   108 0000035C 02                 
   109                                  
   110                                  	;; 【次のステージへ移行】
   111 0000035D EB51                    	jmp		stage_3rd
   112                                  
   113                                  	;; データ
   114 0000035F 326E64207374616765-     .s0		db "2nd stage...", 0x0A, 0x0D, 0
   114 00000368 2E2E2E0A0D00       
   115 0000036E 44726976653A3078        .s1		db "Drive:0x"
   116 00000376 20202C20433A3078        .p1		db "  , C:0x"
   117 0000037E 202020202C20483A30-     .p2		db "    , H:0x"
   117 00000387 78                 
   118 00000388 20202C20533A3078        .p3		db "  , S:0x"
   119 00000390 20200A0D00              .p4		db "  ", 0x0A, 0x0D, 0
   120                                  
   121 00000395 43616E277420676574-     .e0		db "Can't get drive parameter.", 0
   121 0000039E 206472697665207061-
   121 000003A7 72616D657465722E00 
   122                                  
   123                                  stage_3rd:
   124                                  	;; 文字を表示
   125 000003B0 68[F303]E80EFD83C4-     	cdecl	puts, .s0
   125 000003B8 02                 
   126                                  
   127                                  	;; プロテクトモードで使用するフォントは、BIOSのものを流用
   128                                  
   129 000003B9 68[0002]E806FF83C4-     	cdecl	get_font_adr, FONT
   129 000003C1 02                 
   130                                  
   131                                  	;; フォントアドレスの表示
   132                                  
   133 000003C2 6A046A106A0468-         	cdecl	itoa, word	[FONT.seg], .p1, 4, 16, 0b0100
   133 000003C9 [1104]FF36[0002]E8-
   133 000003D0 32FE83C40A         
   134 000003D5 6A046A106A0468-         	cdecl	itoa, word	[FONT.off], .p2, 4, 16, 0b0100
   134 000003DC [1604]FF36[0202]E8-
   134 000003E3 1FFE83C40A         
   135 000003E8 68[0204]E8D6FC83C4-     	cdecl	puts, .s1
   135 000003F0 02                 
   136                                  
   137                                  	;; 処理の終了
   138 000003F1 EBFE                    	jmp		$					;while(1)
   139                                  
   140                                  	;; データ
   141 000003F3 337264207374616765-     .s0		db	"3rd stage...", 0x0A, 0x0D, 0
   141 000003FC 2E2E2E0A0D00       
   142                                  
   143 00000402 466F6E742041646472-     .s1:	db 	"Font Address = "
   143 0000040B 657373203D20       
   144 00000411 5A5A5A5A3A              .p1:	db	"ZZZZ:"
   145 00000416 5A5A5A5A0A0D00          .p2:	db	"ZZZZ", 0x0A, 0x0D, 0	
   146 0000041D 0A0D00                  		db	0x0A, 0x0D, 0
   147                                  	
   148                                  ;; パディング（このファイルは8kバイトとする）
   149 00000420 00<rept>                	times BOOT_SIZE - ($ - $$)		db	0
