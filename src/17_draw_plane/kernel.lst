     1                                  %include	"../include/define.s"
     1                              <1> 	BOOT_LOAD	equ		0x7C00	;ブートプログラムのロード位置
     2                              <1> 	BOOT_SIZE	equ		(1024 * 8) ;ブートコードサイズ
     3                              <1> 	SECT_SIZE	equ		(512)	   ;セクタサイズ
     4                              <1> 	BOOT_SECT	equ		(BOOT_SIZE / SECT_SIZE) ;ブートプログラムのセクタ数
     5                              <1> 
     6                              <1> 	BOOT_END	equ		(BOOT_LOAD + BOOT_SIZE)
     7                              <1> 	
     8                              <1> 	E820_RECORD_SIZE	equ		20
     9                              <1> 
    10                              <1> 
    11                              <1> 	;; KERNEL
    12                              <1> 	;; add 15_load_kernel
    13                              <1> 	KERNEL_LOAD		equ		0x0010_1000
    14                              <1> 	KERNEL_SIZE		equ		(1024 * 8) ;カーネルサイズ
    15                              <1> 	KERNEL_SECT		equ		(KERNEL_SIZE / SECT_SIZE)
    16                              <1> 	
    17                              <1> 	
     2                                  %include 	"../include/macro.s"
     1                              <1> %macro	cdecl	1-*.nolist
     2                              <1> 
     3                              <1> 	%rep	%0 - 1
     4                              <1> 		push	%{-1:-1}
     5                              <1> 		%rotate -1
     6                              <1> 	%endrep
     7                              <1> 	%rotate -1
     8                              <1> 
     9                              <1> 
    10                              <1> 		call	%1
    11                              <1> 
    12                              <1> 	%if	1 < %0
    13                              <1> 		add		sp, (__BITS__ >> 3) * (%0 - 1)
    14                              <1> 	%endif
    15                              <1> 
    16                              <1> %endmacro
    17                              <1> 
    18                              <1> 	
    19                              <1> struc drive
    20 00000000 <res 00000002>      <1> 		.no				resw	1				; ドライブ番号
    21 00000002 <res 00000002>      <1> 		.cyln			resw	1				; C:シリンダ
    22 00000004 <res 00000002>      <1> 		.head			resw	1				; H:ヘッド
    23 00000006 <res 00000002>      <1> 		.sect			resw	1				; S:セクタ
    24                              <1> endstruc
     3                                  
     4                                  
     5                                  	ORG		KERNEL_LOAD
     6                                  
     7                                  [BITS 32]
     8                                  	;; エントリポイント
     9                                  
    10                                  kernel:
    11                                  	;; フォントアドレスを取得
    12 00000000 BE007E0000              	mov		esi, BOOT_LOAD + SECT_SIZE ;ESI = 0x7C00 + 512
    13 00000005 0FB706                  	movzx	eax, word [esi + 0]		  ;EAX = [ESI + 0]
    14 00000008 0FB75E02                	movzx	ebx, word [esi + 2]		  ;EBX = [ESI + 2]
    15 0000000C C1E004                  	shl		eax, 4
    16 0000000F 01D8                    	add		eax, ebx
    17 00000011 A3[D8000000]            	mov		[FONT_ADR], eax
    18                                  
    19                                  	;; 8ビットの横線
    20 00000016 B407                    	mov		ah, 0x07			;
    21 00000018 B002                    	mov		al, 0x02
    22 0000001A 66BAC403                	mov		dx, 0x03C4
    23 0000001E 66EF                    	out		dx, ax
    24                                  
    25 00000020 C60500000A00FF          	mov		[0x000A_0000 + 0], byte 0xFF
    26                                  
    27 00000027 B404                    	mov		ah, 0x04
    28 00000029 66EF                    	out		dx, ax
    29                                  
    30 0000002B C60501000A00FF          	mov		[0x000A_0000 + 1], byte 0xFF
    31                                  
    32 00000032 B402                    	mov		ah, 0x02
    33 00000034 66EF                    	out		dx, ax
    34                                  
    35 00000036 C60502000A00FF          	mov		[0x000A_0000 + 2], byte 0xFF
    36                                  
    37 0000003D B401                    	mov		ah, 0x01
    38 0000003F 66EF                    	out		dx, ax
    39                                  
    40 00000041 C60503000A00FF          	mov		[0x000A_0000 + 3], byte 0xFF
    41                                  
    42                                  	;; 画面を横切る横線
    43 00000048 B402                    	mov		ah, 0x02
    44 0000004A 66EF                    	out		dx, ax
    45                                  
    46 0000004C 8D3D50000A00            	lea		edi, [0x000A_0000 + 80]
    47 00000052 B950000000              	mov		ecx, 80
    48 00000057 B0FF                    	mov		al,	0xFF
    49 00000059 F3AA                    	rep		stosb
    50                                  
    51                                  	;; ２行目に８ドットの矩形
    52 0000005B BF01000000              	mov		edi, 1
    53                                  
    54 00000060 C1E708                  	shl		edi, 8
    55 00000063 8DBCBF00000A00          	lea		edi, [edi * 4 + edi + 0xA_0000]
    56                                  
    57 0000006A 66C707FF00              	mov		[edi + (80 * 0)], word 0xFF 
    58 0000006F 66C74750FF00            	mov		[edi + (80 * 1)], word 0xFF
    59 00000075 66C787A0000000FF00      	mov		[edi + (80 * 2)], word 0xFF
    60 0000007E 66C787F0000000FF00      	mov		[edi + (80 * 3)], word 0xFF
    61 00000087 66C78740010000FF00      	mov		[edi + (80 * 4)], word 0xFF
    62 00000090 66C78790010000FF00      	mov		[edi + (80 * 5)], word 0xFF
    63 00000099 66C787E0010000FF00      	mov		[edi + (80 * 6)], word 0xFF
    64 000000A2 66C78730020000FF00      	mov		[edi + (80 * 7)], word 0xFF 
    65                                  
    66                                  	;; ３行目に文字を描画
    67 000000AB BE41000000              	mov		esi, 'A'
    68 000000B0 C1E604                  	shl		esi, 4
    69 000000B3 0335[D8000000]          	add		esi, [FONT_ADR]
    70                                  
    71 000000B9 BF02000000              	mov		edi, 2
    72 000000BE C1E708                  	shl		edi, 8
    73 000000C1 8DBCBF00000A00          	lea		edi, [edi * 4 + edi + 0xA_0000]
    74                                  
    75 000000C8 B910000000              	mov		ecx, 16
    76                                  
    77                                  .10L:
    78 000000CD A4                      	movsb
    79 000000CE 83C74F                  	add		edi, 80 - 1
    80 000000D1 E2FA                    	loop	.10L
    81                                  
    82                                  	;; 処理の終了
    83 000000D3 EBFE                    	jmp		$
    84                                  
    85 000000D5 00<rept>                ALIGN 4, db 0
    86 000000D8 00000000                FONT_ADR:	dd 0
    87                                  
    88                                  	
    89                                  	;; パディング
    90 000000DC 00<rept>                	times	KERNEL_SIZE - ($ - $$)		db	0 ;パディング
    91                                  	
    92                                  
    93                                  	
