     1                                  %include	"../include/define.s"
     1                              <1> 	BOOT_LOAD	equ		0x7C00	;„Éñ„Éº„Éà„Éó„É≠„Ç∞„É©„É†„ÅÆ„É≠„Éº„Éâ‰ΩçÁΩÆ
     2                              <1> 	BOOT_SIZE	equ		(1024 * 8) ;„Éñ„Éº„Éà„Ç≥„Éº„Éâ„Çµ„Ç§„Ç∫
     3                              <1> 	SECT_SIZE	equ		(512)	   ;„Çª„ÇØ„Çø„Çµ„Ç§„Ç∫
     4                              <1> 	BOOT_SECT	equ		(BOOT_SIZE / SECT_SIZE) ;„Éñ„Éº„Éà„Éó„É≠„Ç∞„É©„É†„ÅÆ„Çª„ÇØ„ÇøÊï∞
     5                              <1> 
     6                              <1> 	BOOT_END	equ		(BOOT_LOAD + BOOT_SIZE)
     7                              <1> 	
     8                              <1> 	E820_RECORD_SIZE	equ		20
     9                              <1> 
    10                              <1> 
    11                              <1> 	;; KERNEL
    12                              <1> 	;; add 15_load_kernel
    13                              <1> 	KERNEL_LOAD		equ		0x0010_1000
    14                              <1> 	KERNEL_SIZE		equ		(1024 * 8) ;„Ç´„Éº„Éç„É´„Çµ„Ç§„Ç∫
    15                              <1> 	KERNEL_SECT		equ		(KERNEL_SIZE / SECT_SIZE)
    16                              <1> 	
    17                              <1> 	
     2                                  %include 	"../include/macro.s"
     1                              <1> %macro	cdecl	1-*.nolist
     2                              <1> 
     3                              <1> 	%rep	%0 - 1
     4                              <1> 		push	%{-1:-1}
     5                              <1> 		%rotate -1
     6                              <1> 	%endrep
     7                              <1> 	%rotate -1
     8                              <1> 
     9                              <1> 
    10                              <1> 		call	%1
    11                              <1> 
    12                              <1> 	%if	1 < %0
    13                              <1> 		add		sp, (__BITS__ >> 3) * (%0 - 1)
    14                              <1> 	%endif
    15                              <1> 
    16                              <1> %endmacro
    17                              <1> 
    18                              <1> 	
    19                              <1> struc drive
    20 00000000 <res 00000002>      <1> 		.no				resw	1				; „Éâ„É©„Ç§„ÉñÁï™Âè∑
    21 00000002 <res 00000002>      <1> 		.cyln			resw	1				; C:„Ç∑„É™„É≥„ÉÄ
    22 00000004 <res 00000002>      <1> 		.head			resw	1				; H:„Éò„ÉÉ„Éâ
    23 00000006 <res 00000002>      <1> 		.sect			resw	1				; S:„Çª„ÇØ„Çø
    24                              <1> endstruc
     3                                  
     4                                  
     5                                  	ORG		KERNEL_LOAD
     6                                  
     7                                  [BITS 32]
     8                                  	;; „Ç®„É≥„Éà„É™„Éù„Ç§„É≥„Éà
     9                                  
    10                                  kernel:
    11                                  	;; „Éï„Ç©„É≥„Éà„Ç¢„Éâ„É¨„Çπ„ÇíÂèñÂæó
    12 00000000 BE007E0000              	mov		esi, BOOT_LOAD + SECT_SIZE ;ESI = 0x7C00 + 512
    13 00000005 0FB706                  	movzx	eax, word [esi + 0]		  ;EAX = [ESI + 0]
    14 00000008 0FB75E02                	movzx	ebx, word [esi + 2]		  ;EBX = [ESI + 2]
    15 0000000C C1E004                  	shl		eax, 4
    16 0000000F 01D8                    	add		eax, ebx
    17 00000011 A3[90000000]            	mov		[FONT_ADR], eax
    18                                  
    19                                  	;; ÊñáÂ≠ó„ÅÆË°®Á§∫
    20 00000016 6A41680F0100006A00-     	cdecl	draw_char, 0, 0, 0x010F, 'A'
    20 0000001F 6A00E8210100006683-
    20 00000028 C410               
    21 0000002A 6A42680F0100006A00-     	cdecl	draw_char, 1, 0, 0x010F, 'B'
    21 00000033 6A01E80D0100006683-
    21 0000003C C410               
    22 0000003E 6A43680F0100006A00-     	cdecl	draw_char, 2, 0, 0x010F, 'C'
    22 00000047 6A02E8F90000006683-
    22 00000050 C410               
    23                                  	
    24 00000052 6A3068020400006A00-     	cdecl	draw_char, 0, 0, 0x0402, '0'
    24 0000005B 6A00E8E50000006683-
    24 00000064 C410               
    25 00000066 6A3168120200006A00-     	cdecl	draw_char, 1, 0, 0x0212, '1'
    25 0000006F 6A01E8D10000006683-
    25 00000078 C410               
    26 0000007A 6A5F68120200006A00-     	cdecl	draw_char, 2, 0, 0x0212, '_'
    26 00000083 6A02E8BD0000006683-
    26 0000008C C410               
    27                                  	
    28                                  	
    29                                  	;; Âá¶ÁêÜ„ÅÆÁµÇ‰∫Ü
    30 0000008E EBFE                    	jmp		$
    31                                  
    32                                  ALIGN 4, db 0
    33 00000090 00000000                FONT_ADR:	dd 0
    34                                  ;; „É¢„Ç∏„É•„Éº„É´
    35                                  %include	"../modules/protect/vga.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	ì«Ç›çûÇ›ÉvÉåÅ[ÉìÇÃëIë
     3                              <1> ;========================================================================
     4                              <1> ;Å°èëéÆ		: void vga_set_read_plane(plane);
     5                              <1> ;
     6                              <1> ;Å°à¯êî
     7                              <1> ;	plane	: ì«Ç›çûÇ›ÉvÉåÅ[Éì
     8                              <1> ;
     9                              <1> ;Å°ñﬂÇËíl	: ñ≥Çµ
    10                              <1> ;************************************************************************
    11                              <1> vga_set_read_plane:
    12                              <1> 		;---------------------------------------
    13                              <1> 		; ÅyÉXÉ^ÉbÉNÉtÉåÅ[ÉÄÇÃç\ízÅz
    14                              <1> 		;---------------------------------------
    15                              <1> 												; EBP+ 8| ÉvÉåÅ[ÉìÅiÉCÉìÉfÉbÉNÉXÅj
    16                              <1> 												; ------+----------------
    17 00000094 55                  <1> 		push	ebp								; EBP+ 4| EIPÅiñﬂÇËî‘ínÅj
    18 00000095 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBPÅiå≥ÇÃílÅj
    19                              <1> 												; ------+----------------
    20                              <1> 
    21                              <1> 		;---------------------------------------
    22                              <1> 		; ÅyÉåÉWÉXÉ^ÇÃï€ë∂Åz
    23                              <1> 		;---------------------------------------
    24 00000097 50                  <1> 		push	eax
    25 00000098 52                  <1> 		push	edx
    26                              <1> 
    27                              <1> 		;---------------------------------------
    28                              <1> 		; ì«Ç›çûÇ›ÉvÉåÅ[ÉìÇÃëIë
    29                              <1> 		;---------------------------------------
    30 00000099 8A6508              <1> 		mov		ah, [ebp + 8]					; AH  = ÉvÉåÅ[ÉìÇëIëÅi3=ãPìx, 2Å`0=RGBÅj
    31 0000009C 80E403              <1> 		and		ah, 0x03						; AH &= 0x03; // ó]åvÇ»ÉrÉbÉgÇÉ}ÉXÉN
    32 0000009F B004                <1> 		mov		al, 0x04						; AL  = ì«Ç›çûÇ›ÉvÉåÅ[ÉìëIëÉåÉWÉXÉ^
    33 000000A1 66BACE03            <1> 		mov		dx, 0x03CE						; DX  = ÉOÉâÉtÉBÉbÉNÉXêßå‰É|Å[Ég
    34 000000A5 66EF                <1> 		out		dx, ax							; // É|Å[ÉgèoóÕ
    35                              <1> 
    36                              <1> 		;---------------------------------------
    37                              <1> 		; ÅyÉåÉWÉXÉ^ÇÃïúãAÅz
    38                              <1> 		;---------------------------------------
    39 000000A7 5A                  <1> 		pop		edx
    40 000000A8 58                  <1> 		pop		eax
    41                              <1> 
    42                              <1> 		;---------------------------------------
    43                              <1> 		; ÅyÉXÉ^ÉbÉNÉtÉåÅ[ÉÄÇÃîjä¸Åz
    44                              <1> 		;---------------------------------------
    45 000000A9 89EC                <1> 		mov		esp, ebp
    46 000000AB 5D                  <1> 		pop		ebp
    47                              <1> 
    48 000000AC C3                  <1> 		ret
    49                              <1> 
    50                              <1> ;************************************************************************
    51                              <1> ;	èëÇ´çûÇ›ÉvÉåÅ[ÉìÇëIë
    52                              <1> ;========================================================================
    53                              <1> ;Å°èëéÆ		: void vga_set_write_plane(plane);
    54                              <1> ;
    55                              <1> ;Å°à¯êî
    56                              <1> ;	plane	: èëÇ´çûÇ›ÉvÉåÅ[Éì
    57                              <1> ;
    58                              <1> ;Å°ñﬂÇËíl	: ñ≥Çµ
    59                              <1> ;************************************************************************
    60                              <1> vga_set_write_plane:
    61                              <1> 		;---------------------------------------
    62                              <1> 		; ÅyÉXÉ^ÉbÉNÉtÉåÅ[ÉÄÇÃç\ízÅz
    63                              <1> 		;---------------------------------------
    64                              <1> 												; EBP+ 8| ÉvÉåÅ[ÉìÅiÉrÉbÉgéwíËÅj
    65                              <1> 												; ------+----------------
    66 000000AD 55                  <1> 		push	ebp								; EBP+ 4| EIPÅiñﬂÇËî‘ínÅj
    67 000000AE 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBPÅiå≥ÇÃílÅj
    68                              <1> 												; ------+----------------
    69                              <1> 
    70                              <1> 		;---------------------------------------
    71                              <1> 		; ÅyÉåÉWÉXÉ^ÇÃï€ë∂Åz
    72                              <1> 		;---------------------------------------
    73 000000B0 50                  <1> 		push	eax
    74 000000B1 52                  <1> 		push	edx
    75                              <1> 
    76                              <1> 		;---------------------------------------
    77                              <1> 		; èëÇ´çûÇ›ÉvÉåÅ[ÉìÇÃëIë
    78                              <1> 		;---------------------------------------
    79 000000B2 8A6508              <1> 		mov		ah, [ebp + 8]					; AH = èëÇ´çûÇ›ÉvÉåÅ[ÉìÇéwíË(Bit:----IRGB)
    80 000000B5 80E40F              <1> 		and		ah, 0x0F						; AH = 0x0F; // ó]åvÇ»ÉrÉbÉgÇÉ}ÉXÉN
    81 000000B8 B002                <1> 		mov		al, 0x02						; AL = èëÇ´çûÇ›ÉvÉåÅ[ÉìëIë
    82 000000BA 66BAC403            <1> 		mov		dx, 0x03C4						; DX = ÉVÅ[ÉPÉìÉTêßå‰É|Å[Ég
    83 000000BE 66EF                <1> 		out		dx, ax							; // É|Å[ÉgèoóÕ
    84                              <1> 
    85                              <1> 		;---------------------------------------
    86                              <1> 		; ÅyÉåÉWÉXÉ^ÇÃïúãAÅz
    87                              <1> 		;---------------------------------------
    88 000000C0 5A                  <1> 		pop		edx
    89 000000C1 58                  <1> 		pop		eax
    90                              <1> 
    91                              <1> 		;---------------------------------------
    92                              <1> 		; ÅyÉXÉ^ÉbÉNÉtÉåÅ[ÉÄÇÃîjä¸Åz
    93                              <1> 		;---------------------------------------
    94 000000C2 89EC                <1> 		mov		esp, ebp
    95 000000C4 5D                  <1> 		pop		ebp
    96                              <1> 
    97 000000C5 C3                  <1> 		ret
    98                              <1> 
    99                              <1> ;************************************************************************
   100                              <1> ;	ÉtÉHÉìÉgÇÃèëÇ´çûÇ›
   101                              <1> ;========================================================================
   102                              <1> ;Å°èëéÆ		: void vram_font_copy(font, vram, plane, color);
   103                              <1> ;
   104                              <1> ;Å°à¯êî
   105                              <1> ;	font	: FONTÉAÉhÉåÉX
   106                              <1> ;	vram	: VRAMÉAÉhÉåÉX
   107                              <1> ;	plane	: èoóÕÉvÉåÅ[ÉìÅiÇPÇ¬ÇÃÉvÉåÅ[ÉìÇÃÇ›ÇÉrÉbÉgÇ≈éwíËÅj
   108                              <1> ;	color	: ï`âÊêF
   109                              <1> ;
   110                              <1> ;Å°ñﬂÇËíl	: ñ≥Çµ
   111                              <1> ;************************************************************************
   112                              <1> vram_font_copy:
   113                              <1> 		;---------------------------------------
   114                              <1> 		; ÅyÉXÉ^ÉbÉNÉtÉåÅ[ÉÄÇÃç\ízÅz
   115                              <1> 		;---------------------------------------
   116                              <1> 												; EBP+20| êFÅiîwåi/ëOåiêFÅj
   117                              <1> 												; EBP+16| ÉvÉåÅ[ÉìÅiÉrÉbÉgéwíËÅj
   118                              <1> 												; EBP+12| VRAMÉAÉhÉåÉX
   119                              <1> 												; EBP+ 8| FONTÉAÉhÉåÉX
   120                              <1> 												; ------+----------------
   121 000000C6 55                  <1> 		push	ebp								; EBP+ 4| EIPÅiñﬂÇËî‘ínÅj
   122 000000C7 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBPÅiå≥ÇÃílÅj
   123                              <1> 												; ------+----------------
   124                              <1> 
   125                              <1> 		;---------------------------------------
   126                              <1> 		; ÅyÉåÉWÉXÉ^ÇÃï€ë∂Åz
   127                              <1> 		;---------------------------------------
   128 000000C9 50                  <1> 		push	eax
   129 000000CA 53                  <1> 		push	ebx
   130 000000CB 51                  <1> 		push	ecx
   131 000000CC 52                  <1> 		push	edx
   132 000000CD 56                  <1> 		push	esi
   133 000000CE 57                  <1> 		push	edi
   134                              <1> 
   135                              <1> 		;---------------------------------------
   136                              <1> 		; ÅyèàóùÇÃäJénÅz
   137                              <1> 		;---------------------------------------
   138 000000CF 8B7508              <1> 		mov		esi, [ebp + 8]					; ESI = ÉtÉHÉìÉgÉAÉhÉåÉX;
   139 000000D2 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = VRAMÉAÉhÉåÉX;
   140 000000D5 0FB64510            <1> 		movzx	eax, byte [ebp +16]				; EAX = ÉvÉåÅ[ÉìÅiÉrÉbÉgéwíËÅj;
   141 000000D9 0FB75D14            <1> 		movzx	ebx, word [ebp +20]				; EBX = êF;
   142                              <1> 
   143 000000DD 84C7                <1> 		test	bh, al							; ZF = (îwåiêF & ÉvÉåÅ[Éì);
   144 000000DF 0F94C6              <1> 		setz	dh								; AH = ZF ? 0x01 : 0x00
   145 000000E2 FECE                <1> 		dec		dh								; AH--; // 0x00 or 0xFF
   146                              <1> 
   147 000000E4 84C3                <1> 		test	bl, al							; ZF = (ëOåiêF & ÉvÉåÅ[Éì);
   148 000000E6 0F94C2              <1> 		setz	dl								; AL = ZF ? 0x01 : 0x00
   149 000000E9 FECA                <1> 		dec		dl								; AL--; // 0x00 or 0xFF
   150                              <1> 
   151                              <1> 		;---------------------------------------
   152                              <1> 		; 16ÉhÉbÉgÉtÉHÉìÉgÇÃÉRÉsÅ[
   153                              <1> 		;---------------------------------------
   154 000000EB FC                  <1> 		cld										; DF  = 0; // ÉAÉhÉåÉXâ¡éZ
   155                              <1> 
   156 000000EC B910000000          <1> 		mov		ecx, 16							; ECX = 16; // 16ÉhÉbÉg
   157                              <1> .10L:											; do
   158                              <1> 												; {
   159                              <1> 		;---------------------------------------
   160                              <1> 		; ÉtÉHÉìÉgÉ}ÉXÉNÇÃçÏê¨
   161                              <1> 		;---------------------------------------
   162 000000F1 AC                  <1> 		lodsb									;   AL  = *ESI++; //  ÉtÉHÉìÉg
   163 000000F2 88C4                <1> 		mov		ah, al							;   AH ~= AL;     // !ÉtÉHÉìÉgÅiÉrÉbÉgîΩì]Åj
   164 000000F4 F6D4                <1> 		not		ah								;   
   165                              <1> 
   166                              <1> 		;---------------------------------------
   167                              <1> 		; ëOåiêF
   168                              <1> 		;---------------------------------------
   169 000000F6 20D0                <1> 		and		al, dl							;   AL = ëOåiêF & ÉtÉHÉìÉg;
   170                              <1> 
   171                              <1> 		;---------------------------------------
   172                              <1> 		; îwåiêF
   173                              <1> 		;---------------------------------------
   174 000000F8 F7C310000000        <1> 		test	ebx, 0x0010						;   if (ìßâﬂÉÇÅ[Éh)
   175 000000FE 7404                <1> 		jz		.11F							;   {
   176 00000100 2227                <1> 		and		ah, [edi]						;     AH = !ÉtÉHÉìÉg & [EDI] // åªç›íl
   177 00000102 EB02                <1> 		jmp		.11E							;   }
   178                              <1> .11F:											;   else
   179                              <1> 												;   {
   180 00000104 20F4                <1> 		and		ah, dh							;     AH = !ÉtÉHÉìÉg & îwåiêF;
   181                              <1> .11E:											;   }
   182                              <1> 
   183                              <1> 		;---------------------------------------
   184                              <1> 		; ëOåiêFÇ∆îwåiêFÇçáê¨
   185                              <1> 		;---------------------------------------
   186 00000106 08E0                <1> 		or		al, ah							;   AL  = îwåi | ëOåi;
   187                              <1> 
   188                              <1> 		;---------------------------------------
   189                              <1> 		; êVÇµÇ¢ílÇèoóÕ
   190                              <1> 		;---------------------------------------
   191 00000108 8807                <1> 		mov		[edi], al						;   [EDI] = AL; // ÉvÉåÅ[ÉìÇ…èëÇ´çûÇﬁ
   192                              <1> 
   193 0000010A 83C750              <1> 		add		edi, 80							;   EDI += 80;
   194 0000010D E2E2                <1> 		loop	.10L							; } while (--ECX);
   195                              <1> .10E:											; 
   196                              <1> 
   197                              <1> 		;---------------------------------------
   198                              <1> 		; ÅyÉåÉWÉXÉ^ÇÃïúãAÅz
   199                              <1> 		;---------------------------------------
   200 0000010F 5F                  <1> 		pop		edi
   201 00000110 5E                  <1> 		pop		esi
   202 00000111 5A                  <1> 		pop		edx
   203 00000112 59                  <1> 		pop		ecx
   204 00000113 5B                  <1> 		pop		ebx
   205 00000114 58                  <1> 		pop		eax
   206                              <1> 
   207                              <1> 		;---------------------------------------
   208                              <1> 		; ÅyÉXÉ^ÉbÉNÉtÉåÅ[ÉÄÇÃîjä¸Åz
   209                              <1> 		;---------------------------------------
   210 00000115 89EC                <1> 		mov		esp, ebp
   211 00000117 5D                  <1> 		pop		ebp
   212                              <1> 
   213 00000118 C3                  <1> 		ret
   214                              <1> 
   215                              <1> ;************************************************************************
   216                              <1> ;	ÉrÉbÉgÉpÉ^Å[ÉìÇÃèëÇ´çûÇ›
   217                              <1> ;========================================================================
   218                              <1> ;Å°èëéÆ		: void vram_bit_copy(bit, vram, flag);
   219                              <1> ;
   220                              <1> ;Å°à¯êî
   221                              <1> ;	bit		: èoóÕÉrÉbÉgÉpÉ^Å[Éì
   222                              <1> ;	vram	: VRAMÉAÉhÉåÉX
   223                              <1> ;	flag	: 1:ÉZÉbÉg, 0:ÉNÉäÉA
   224                              <1> ;
   225                              <1> ;Å°ñﬂÇËíl	: ñ≥Çµ
   226                              <1> ;************************************************************************
   227                              <1> vram_bit_copy:
   228                              <1> 		;---------------------------------------
   229                              <1> 		; ÅyÉXÉ^ÉbÉNÉtÉåÅ[ÉÄÇÃç\ízÅz
   230                              <1> 		;---------------------------------------
   231                              <1> 												; EBP+20| êFÅiîwåi/ëOåiêFÅj
   232                              <1> 												; EBP+16| ÉvÉåÅ[ÉìÅiÉrÉbÉgéwíËÅj
   233                              <1> 												; EBP+12| VRAMÉAÉhÉåÉX
   234                              <1> 												; EBP+ 8| èoóÕÉrÉbÉgÉpÉ^Å[Éì
   235                              <1> 												; ------+----------------
   236 00000119 55                  <1> 		push	ebp								; EBP+ 4| EIPÅiñﬂÇËî‘ínÅj
   237 0000011A 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBPÅiå≥ÇÃílÅj
   238                              <1> 												; ------+----------------
   239                              <1> 
   240                              <1> 		;---------------------------------------
   241                              <1> 		; ÅyÉåÉWÉXÉ^ÇÃï€ë∂Åz
   242                              <1> 		;---------------------------------------
   243 0000011C 50                  <1> 		push	eax
   244 0000011D 53                  <1> 		push	ebx
   245 0000011E 57                  <1> 		push	edi
   246                              <1> 
   247                              <1> 		;---------------------------------------
   248                              <1> 		; ÅyèàóùÇÃäJénÅz
   249                              <1> 		;---------------------------------------
   250 0000011F 8B7D0C              <1> 		mov		edi, [ebp +12]					; EDI = VRAMÉAÉhÉåÉX;
   251 00000122 0FB64510            <1> 		movzx	eax, byte [ebp +16]				; EAX = ÉvÉåÅ[ÉìÅiÉrÉbÉgéwíËÅj;
   252 00000126 0FB75D14            <1> 		movzx	ebx, word [ebp +20]				; EBX = ï\é¶êF;
   253                              <1> 
   254 0000012A 84C3                <1> 		test	bl, al							; ZF = (ëOåiêF & ÉvÉåÅ[Éì);
   255 0000012C 0F94C3              <1> 		setz	bl								; BL = ZF ? 0x01 : 0x00
   256 0000012F FECB                <1> 		dec		bl								; BL--; // 0x00 or 0xFF
   257                              <1> 
   258                              <1> 		;---------------------------------------
   259                              <1> 		; É}ÉXÉNÉfÅ[É^ÇÃçÏê¨
   260                              <1> 		;---------------------------------------
   261 00000131 8A4508              <1> 		mov		al, [ebp + 8]					; AL = èoóÕÉrÉbÉgÉpÉ^Å[Éì;
   262 00000134 88C4                <1> 		mov		ah, al							; AH ~= AL;     // !èoóÕÉrÉbÉgÉpÉ^Å[ÉìÅiÉrÉbÉgîΩì]Åj
   263 00000136 F6D4                <1> 		not		ah								; 
   264                              <1> 
   265                              <1> 		;---------------------------------------
   266                              <1> 		; åªç›ílÇÃèoóÕÇéÊìæ
   267                              <1> 		;---------------------------------------
   268 00000138 2227                <1> 		and		ah, [edi]						; AH  = åªç›íl & !èoóÕÉrÉbÉgÉpÉ^Å[Éì
   269 0000013A 20D8                <1> 		and		al, bl							; AL  = ï\é¶êF &  èoóÕÉrÉbÉgÉpÉ^Å[Éì
   270 0000013C 08E0                <1> 		or		al, ah							; AL |= AH;
   271                              <1> 
   272                              <1> 		;---------------------------------------
   273                              <1> 		; êVÇµÇ¢ílÇèoóÕ
   274                              <1> 		;---------------------------------------
   275 0000013E 8807                <1> 		mov		[edi], al						; [EDI] = BL; // ÉvÉåÅ[ÉìÇ…èëÇ´çûÇﬁ
   276                              <1> 
   277                              <1> 		;---------------------------------------
   278                              <1> 		; ÅyÉåÉWÉXÉ^ÇÃïúãAÅz
   279                              <1> 		;---------------------------------------
   280 00000140 5F                  <1> 		pop		edi
   281 00000141 5B                  <1> 		pop		ebx
   282 00000142 58                  <1> 		pop		eax
   283                              <1> 
   284                              <1> 		;---------------------------------------
   285                              <1> 		; ÅyÉXÉ^ÉbÉNÉtÉåÅ[ÉÄÇÃîjä¸Åz
   286                              <1> 		;---------------------------------------
   287 00000143 89EC                <1> 		mov		esp, ebp
   288 00000145 5D                  <1> 		pop		ebp
   289                              <1> 
   290 00000146 C3                  <1> 		ret
   291                              <1> 
    36                                  %include	"../modules/protect/draw_char.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	ï∂éöÇÃï\é¶
     3                              <1> ;------------------------------------------------------------------------
     4                              <1> ;	ÉOÉâÉtÉBÉbÉNÉXÉÇÅ[ÉhÇ≈ÉeÉLÉXÉgÇï\é¶
     5                              <1> ;========================================================================
     6                              <1> ;Å°èëéÆ		: void draw_char(col, row, color, ch);
     7                              <1> ;
     8                              <1> ;Å°à¯êî
     9                              <1> ;	col		: óÒÅi0Å`79Åj
    10                              <1> ;	row		: çsÅi0Å`29Åj
    11                              <1> ;	color	: ï`âÊêF
    12                              <1> ;	ch		: ï∂éö
    13                              <1> ;
    14                              <1> ;Å°ñﬂÇËíl	: ñ≥Çµ
    15                              <1> ;************************************************************************
    16                              <1> draw_char:
    17                              <1> 		;---------------------------------------
    18                              <1> 		; ÅyÉXÉ^ÉbÉNÉtÉåÅ[ÉÄÇÃç\ízÅz
    19                              <1> 		;---------------------------------------
    20                              <1> 												; ------|--------
    21                              <1> 												; EBP+20| ï∂éö
    22                              <1> 												; EBP+16| êF
    23                              <1> 												; EBP+12| YÅiçsÅj
    24                              <1> 												; EBP+ 8| XÅióÒÅj
    25                              <1> 												; ------+----------------
    26 00000147 55                  <1> 		push	ebp								; EBP+ 4| EIPÅiñﬂÇËî‘ínÅj
    27 00000148 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBPÅiå≥ÇÃílÅj
    28                              <1> 												; ------+----------------
    29                              <1> 
    30                              <1> 		;---------------------------------------
    31                              <1> 		; ÅyÉåÉWÉXÉ^ÇÃï€ë∂Åz
    32                              <1> 		;---------------------------------------
    33 0000014A 50                  <1> 		push	eax
    34 0000014B 53                  <1> 		push	ebx
    35 0000014C 51                  <1> 		push	ecx
    36 0000014D 52                  <1> 		push	edx
    37 0000014E 56                  <1> 		push	esi
    38 0000014F 57                  <1> 		push	edi
    39                              <1> 
    40                              <1> 		;---------------------------------------
    41                              <1> 		; ÉeÉXÉgÉAÉìÉhÉZÉbÉg
    42                              <1> 		;---------------------------------------
    43                              <1> %ifdef	USE_TEST_AND_SET
    44                              <1> 		cdecl	test_and_set, IN_USE			; TEST_AND_SET(IN_USE); // ÉäÉ\Å[ÉXÇÃãÛÇ´ë“Çø
    45                              <1> %endif
    46                              <1> 
    47                              <1> 		;---------------------------------------
    48                              <1> 		; ÉRÉsÅ[å≥ÉtÉHÉìÉgÉAÉhÉåÉXÇê›íË
    49                              <1> 		;---------------------------------------
    50 00000150 0FB67514            <1> 		movzx	esi, byte [ebp +20]				; CL  = ï∂éöÉRÅ[Éh;
    51 00000154 C1E604              <1> 		shl		esi, 4							; CL *= 16; // 1ï∂éö16ÉoÉCÉg
    52 00000157 0335[90000000]      <1> 		add		esi, [FONT_ADR]					; ESI = ÉtÉHÉìÉgÉAÉhÉåÉX;
    53                              <1> 
    54                              <1> 		;---------------------------------------
    55                              <1> 		; ÉRÉsÅ[êÊÉAÉhÉåÉXÇéÊìæ
    56                              <1> 		; Adr = 0xA0000 + (640 / 8 * 16) * y + x
    57                              <1> 		;---------------------------------------
    58 0000015D 8B7D0C              <1> 		mov		edi, [ebp +12]					; YÅiçsÅj
    59 00000160 C1E708              <1> 		shl		edi, 8							; EDI = Y * 256;
    60 00000163 8DBCBF00000A00      <1> 		lea		edi, [edi * 4 + edi + 0xA0000]	; EDI = Y *   4 + Y;
    61 0000016A 037D08              <1> 		add		edi, [ebp + 8]					; XÅióÒÅj
    62                              <1> 
    63                              <1> 		;---------------------------------------
    64                              <1> 		; 1ï∂éöï™ÇÃÉtÉHÉìÉgÇèoóÕ
    65                              <1> 		;---------------------------------------
    66 0000016D 0FB75D10            <1> 		movzx	ebx, word [ebp +16]				; // ï\é¶êF
    67                              <1> 
    68 00000171 6A03E81CFFFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x03		; // èëÇ´çûÇ›ÉvÉåÅ[ÉìÅFãPìx(I)
    68 0000017A C404                <1>
    69 0000017C 6A08E82AFFFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x08		; // ì«Ç›çûÇ›ÉvÉåÅ[ÉìÅFãPìx(I)
    69 00000185 C404                <1>
    70 00000187 536A085756E835FFFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x08, ebx
    70 00000190 FF6683C410          <1>
    71                              <1> 
    72 00000195 6A02E8F8FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x02		; // èëÇ´çûÇ›ÉvÉåÅ[ÉìÅFê‘(R)
    72 0000019E C404                <1>
    73 000001A0 6A04E806FFFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x04		; // ì«Ç›çûÇ›ÉvÉåÅ[ÉìÅFê‘(R)
    73 000001A9 C404                <1>
    74 000001AB 536A045756E811FFFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x04, ebx
    74 000001B4 FF6683C410          <1>
    75                              <1> 
    76 000001B9 6A01E8D4FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x01		; // èëÇ´çûÇ›ÉvÉåÅ[ÉìÅFóŒ(G)
    76 000001C2 C404                <1>
    77 000001C4 6A02E8E2FEFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x02		; // ì«Ç›çûÇ›ÉvÉåÅ[ÉìÅFóŒ(G)
    77 000001CD C404                <1>
    78 000001CF 536A025756E8EDFEFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x02, ebx
    78 000001D8 FF6683C410          <1>
    79                              <1> 
    80 000001DD 6A00E8B0FEFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x00		; // èëÇ´çûÇ›ÉvÉåÅ[ÉìÅFê¬(B)
    80 000001E6 C404                <1>
    81 000001E8 6A01E8BEFEFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x01		; // ì«Ç›çûÇ›ÉvÉåÅ[ÉìÅFê¬(B)
    81 000001F1 C404                <1>
    82 000001F3 536A015756E8C9FEFF- <1> 		cdecl	vram_font_copy, esi, edi, 0x01, ebx
    82 000001FC FF6683C410          <1>
    83                              <1> 
    84                              <1> %ifdef	USE_TEST_AND_SET
    85                              <1> 		;---------------------------------------
    86                              <1> 		; ÉeÉXÉgÉAÉìÉhÉZÉbÉg
    87                              <1> 		;---------------------------------------
    88                              <1> 		mov		[IN_USE], dword 0				; ïœêîÇÃÉNÉäÉA
    89                              <1> %endif
    90                              <1> 
    91                              <1> 		;---------------------------------------
    92                              <1> 		; ÅyÉåÉWÉXÉ^ÇÃïúãAÅz
    93                              <1> 		;---------------------------------------
    94 00000201 5F                  <1> 		pop		edi
    95 00000202 5E                  <1> 		pop		esi
    96 00000203 5A                  <1> 		pop		edx
    97 00000204 59                  <1> 		pop		ecx
    98 00000205 5B                  <1> 		pop		ebx
    99 00000206 58                  <1> 		pop		eax
   100                              <1> 
   101                              <1> 		;---------------------------------------
   102                              <1> 		; ÅyÉXÉ^ÉbÉNÉtÉåÅ[ÉÄÇÃîjä¸Åz
   103                              <1> 		;---------------------------------------
   104 00000207 89EC                <1> 		mov		esp, ebp
   105 00000209 5D                  <1> 		pop		ebp
   106                              <1> 
   107 0000020A C3                  <1> 		ret
   108                              <1> 
   109                              <1> %ifdef USE_TEST_AND_SET
   110                              <1> ALIGN 4, db 0
   111                              <1> IN_USE:	dd	0
   112                              <1> %endif
   113                              <1> 
    37                                  
    38                                  	
    39                                  	;; „Éë„Éá„Ç£„É≥„Ç∞
    40 0000020B 00<rept>                	times	KERNEL_SIZE - ($ - $$)		db	0 ;„Éë„Éá„Ç£„É≥„Ç∞
    41                                  	
    42                                  
    43                                  	
